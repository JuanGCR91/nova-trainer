
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Campana
 * 
 */
export type Campana = $Result.DefaultSelection<Prisma.$CampanaPayload>
/**
 * Model ClienteSimulado
 * 
 */
export type ClienteSimulado = $Result.DefaultSelection<Prisma.$ClienteSimuladoPayload>
/**
 * Model Simulacion
 * 
 */
export type Simulacion = $Result.DefaultSelection<Prisma.$SimulacionPayload>
/**
 * Model ConfiguracionSistema
 * 
 */
export type ConfiguracionSistema = $Result.DefaultSelection<Prisma.$ConfiguracionSistemaPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs>;

  /**
   * `prisma.campana`: Exposes CRUD operations for the **Campana** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Campanas
    * const campanas = await prisma.campana.findMany()
    * ```
    */
  get campana(): Prisma.CampanaDelegate<ExtArgs>;

  /**
   * `prisma.clienteSimulado`: Exposes CRUD operations for the **ClienteSimulado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ClienteSimulados
    * const clienteSimulados = await prisma.clienteSimulado.findMany()
    * ```
    */
  get clienteSimulado(): Prisma.ClienteSimuladoDelegate<ExtArgs>;

  /**
   * `prisma.simulacion`: Exposes CRUD operations for the **Simulacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Simulacions
    * const simulacions = await prisma.simulacion.findMany()
    * ```
    */
  get simulacion(): Prisma.SimulacionDelegate<ExtArgs>;

  /**
   * `prisma.configuracionSistema`: Exposes CRUD operations for the **ConfiguracionSistema** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ConfiguracionSistemas
    * const configuracionSistemas = await prisma.configuracionSistema.findMany()
    * ```
    */
  get configuracionSistema(): Prisma.ConfiguracionSistemaDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Campana: 'Campana',
    ClienteSimulado: 'ClienteSimulado',
    Simulacion: 'Simulacion',
    ConfiguracionSistema: 'ConfiguracionSistema'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "usuario" | "campana" | "clienteSimulado" | "simulacion" | "configuracionSistema"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Campana: {
        payload: Prisma.$CampanaPayload<ExtArgs>
        fields: Prisma.CampanaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CampanaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CampanaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanaPayload>
          }
          findFirst: {
            args: Prisma.CampanaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CampanaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanaPayload>
          }
          findMany: {
            args: Prisma.CampanaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanaPayload>[]
          }
          create: {
            args: Prisma.CampanaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanaPayload>
          }
          createMany: {
            args: Prisma.CampanaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CampanaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanaPayload>[]
          }
          delete: {
            args: Prisma.CampanaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanaPayload>
          }
          update: {
            args: Prisma.CampanaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanaPayload>
          }
          deleteMany: {
            args: Prisma.CampanaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CampanaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CampanaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampanaPayload>
          }
          aggregate: {
            args: Prisma.CampanaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCampana>
          }
          groupBy: {
            args: Prisma.CampanaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CampanaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CampanaCountArgs<ExtArgs>
            result: $Utils.Optional<CampanaCountAggregateOutputType> | number
          }
        }
      }
      ClienteSimulado: {
        payload: Prisma.$ClienteSimuladoPayload<ExtArgs>
        fields: Prisma.ClienteSimuladoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClienteSimuladoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteSimuladoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClienteSimuladoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteSimuladoPayload>
          }
          findFirst: {
            args: Prisma.ClienteSimuladoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteSimuladoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClienteSimuladoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteSimuladoPayload>
          }
          findMany: {
            args: Prisma.ClienteSimuladoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteSimuladoPayload>[]
          }
          create: {
            args: Prisma.ClienteSimuladoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteSimuladoPayload>
          }
          createMany: {
            args: Prisma.ClienteSimuladoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClienteSimuladoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteSimuladoPayload>[]
          }
          delete: {
            args: Prisma.ClienteSimuladoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteSimuladoPayload>
          }
          update: {
            args: Prisma.ClienteSimuladoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteSimuladoPayload>
          }
          deleteMany: {
            args: Prisma.ClienteSimuladoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClienteSimuladoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ClienteSimuladoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClienteSimuladoPayload>
          }
          aggregate: {
            args: Prisma.ClienteSimuladoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClienteSimulado>
          }
          groupBy: {
            args: Prisma.ClienteSimuladoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteSimuladoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClienteSimuladoCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteSimuladoCountAggregateOutputType> | number
          }
        }
      }
      Simulacion: {
        payload: Prisma.$SimulacionPayload<ExtArgs>
        fields: Prisma.SimulacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SimulacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SimulacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacionPayload>
          }
          findFirst: {
            args: Prisma.SimulacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SimulacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacionPayload>
          }
          findMany: {
            args: Prisma.SimulacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacionPayload>[]
          }
          create: {
            args: Prisma.SimulacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacionPayload>
          }
          createMany: {
            args: Prisma.SimulacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SimulacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacionPayload>[]
          }
          delete: {
            args: Prisma.SimulacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacionPayload>
          }
          update: {
            args: Prisma.SimulacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacionPayload>
          }
          deleteMany: {
            args: Prisma.SimulacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SimulacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SimulacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacionPayload>
          }
          aggregate: {
            args: Prisma.SimulacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSimulacion>
          }
          groupBy: {
            args: Prisma.SimulacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SimulacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SimulacionCountArgs<ExtArgs>
            result: $Utils.Optional<SimulacionCountAggregateOutputType> | number
          }
        }
      }
      ConfiguracionSistema: {
        payload: Prisma.$ConfiguracionSistemaPayload<ExtArgs>
        fields: Prisma.ConfiguracionSistemaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConfiguracionSistemaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConfiguracionSistemaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          findFirst: {
            args: Prisma.ConfiguracionSistemaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConfiguracionSistemaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          findMany: {
            args: Prisma.ConfiguracionSistemaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>[]
          }
          create: {
            args: Prisma.ConfiguracionSistemaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          createMany: {
            args: Prisma.ConfiguracionSistemaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConfiguracionSistemaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>[]
          }
          delete: {
            args: Prisma.ConfiguracionSistemaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          update: {
            args: Prisma.ConfiguracionSistemaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          deleteMany: {
            args: Prisma.ConfiguracionSistemaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConfiguracionSistemaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ConfiguracionSistemaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracionSistemaPayload>
          }
          aggregate: {
            args: Prisma.ConfiguracionSistemaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfiguracionSistema>
          }
          groupBy: {
            args: Prisma.ConfiguracionSistemaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracionSistemaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConfiguracionSistemaCountArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracionSistemaCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    simulaciones: number
    campanasCreadas: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    simulaciones?: boolean | UsuarioCountOutputTypeCountSimulacionesArgs
    campanasCreadas?: boolean | UsuarioCountOutputTypeCountCampanasCreadasArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountSimulacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SimulacionWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCampanasCreadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CampanaWhereInput
  }


  /**
   * Count Type CampanaCountOutputType
   */

  export type CampanaCountOutputType = {
    clientes: number
  }

  export type CampanaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | CampanaCountOutputTypeCountClientesArgs
  }

  // Custom InputTypes
  /**
   * CampanaCountOutputType without action
   */
  export type CampanaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampanaCountOutputType
     */
    select?: CampanaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CampanaCountOutputType without action
   */
  export type CampanaCountOutputTypeCountClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteSimuladoWhereInput
  }


  /**
   * Count Type ClienteSimuladoCountOutputType
   */

  export type ClienteSimuladoCountOutputType = {
    simulaciones: number
  }

  export type ClienteSimuladoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    simulaciones?: boolean | ClienteSimuladoCountOutputTypeCountSimulacionesArgs
  }

  // Custom InputTypes
  /**
   * ClienteSimuladoCountOutputType without action
   */
  export type ClienteSimuladoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimuladoCountOutputType
     */
    select?: ClienteSimuladoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClienteSimuladoCountOutputType without action
   */
  export type ClienteSimuladoCountOutputTypeCountSimulacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SimulacionWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    nombre: string | null
    apellido: string | null
    rol: string | null
    activo: boolean | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    nombre: string | null
    apellido: string | null
    rol: string | null
    activo: boolean | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    email: number
    password: number
    nombre: number
    apellido: number
    rol: number
    activo: number
    fechaCreacion: number
    fechaActualizacion: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    nombre?: true
    apellido?: true
    rol?: true
    activo?: true
    fechaCreacion?: true
    fechaActualizacion?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    nombre?: true
    apellido?: true
    rol?: true
    activo?: true
    fechaCreacion?: true
    fechaActualizacion?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    nombre?: true
    apellido?: true
    rol?: true
    activo?: true
    fechaCreacion?: true
    fechaActualizacion?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    email: string
    password: string | null
    nombre: string
    apellido: string | null
    rol: string
    activo: boolean
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    nombre?: boolean
    apellido?: boolean
    rol?: boolean
    activo?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
    simulaciones?: boolean | Usuario$simulacionesArgs<ExtArgs>
    campanasCreadas?: boolean | Usuario$campanasCreadasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    nombre?: boolean
    apellido?: boolean
    rol?: boolean
    activo?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    nombre?: boolean
    apellido?: boolean
    rol?: boolean
    activo?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
  }

  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    simulaciones?: boolean | Usuario$simulacionesArgs<ExtArgs>
    campanasCreadas?: boolean | Usuario$campanasCreadasArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      simulaciones: Prisma.$SimulacionPayload<ExtArgs>[]
      campanasCreadas: Prisma.$CampanaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      password: string | null
      nombre: string
      apellido: string | null
      rol: string
      activo: boolean
      fechaCreacion: Date | null
      fechaActualizacion: Date | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    simulaciones<T extends Usuario$simulacionesArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$simulacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "findMany"> | Null>
    campanasCreadas<T extends Usuario$campanasCreadasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$campanasCreadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */ 
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'Int'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly password: FieldRef<"Usuario", 'String'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly apellido: FieldRef<"Usuario", 'String'>
    readonly rol: FieldRef<"Usuario", 'String'>
    readonly activo: FieldRef<"Usuario", 'Boolean'>
    readonly fechaCreacion: FieldRef<"Usuario", 'DateTime'>
    readonly fechaActualizacion: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario.simulaciones
   */
  export type Usuario$simulacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
    where?: SimulacionWhereInput
    orderBy?: SimulacionOrderByWithRelationInput | SimulacionOrderByWithRelationInput[]
    cursor?: SimulacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SimulacionScalarFieldEnum | SimulacionScalarFieldEnum[]
  }

  /**
   * Usuario.campanasCreadas
   */
  export type Usuario$campanasCreadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
    where?: CampanaWhereInput
    orderBy?: CampanaOrderByWithRelationInput | CampanaOrderByWithRelationInput[]
    cursor?: CampanaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CampanaScalarFieldEnum | CampanaScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Campana
   */

  export type AggregateCampana = {
    _count: CampanaCountAggregateOutputType | null
    _avg: CampanaAvgAggregateOutputType | null
    _sum: CampanaSumAggregateOutputType | null
    _min: CampanaMinAggregateOutputType | null
    _max: CampanaMaxAggregateOutputType | null
  }

  export type CampanaAvgAggregateOutputType = {
    id: number | null
    creadorId: number | null
  }

  export type CampanaSumAggregateOutputType = {
    id: number | null
    creadorId: number | null
  }

  export type CampanaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    estado: string | null
    fechaInicio: Date | null
    fechaFin: Date | null
    prompt: string | null
    creadorId: number | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
  }

  export type CampanaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    estado: string | null
    fechaInicio: Date | null
    fechaFin: Date | null
    prompt: string | null
    creadorId: number | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
  }

  export type CampanaCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    estado: number
    fechaInicio: number
    fechaFin: number
    campos: number
    prompt: number
    criteriosEvaluacion: number
    creadorId: number
    fechaCreacion: number
    fechaActualizacion: number
    _all: number
  }


  export type CampanaAvgAggregateInputType = {
    id?: true
    creadorId?: true
  }

  export type CampanaSumAggregateInputType = {
    id?: true
    creadorId?: true
  }

  export type CampanaMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    estado?: true
    fechaInicio?: true
    fechaFin?: true
    prompt?: true
    creadorId?: true
    fechaCreacion?: true
    fechaActualizacion?: true
  }

  export type CampanaMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    estado?: true
    fechaInicio?: true
    fechaFin?: true
    prompt?: true
    creadorId?: true
    fechaCreacion?: true
    fechaActualizacion?: true
  }

  export type CampanaCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    estado?: true
    fechaInicio?: true
    fechaFin?: true
    campos?: true
    prompt?: true
    criteriosEvaluacion?: true
    creadorId?: true
    fechaCreacion?: true
    fechaActualizacion?: true
    _all?: true
  }

  export type CampanaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Campana to aggregate.
     */
    where?: CampanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campanas to fetch.
     */
    orderBy?: CampanaOrderByWithRelationInput | CampanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CampanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campanas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Campanas
    **/
    _count?: true | CampanaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CampanaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CampanaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CampanaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CampanaMaxAggregateInputType
  }

  export type GetCampanaAggregateType<T extends CampanaAggregateArgs> = {
        [P in keyof T & keyof AggregateCampana]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCampana[P]>
      : GetScalarType<T[P], AggregateCampana[P]>
  }




  export type CampanaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CampanaWhereInput
    orderBy?: CampanaOrderByWithAggregationInput | CampanaOrderByWithAggregationInput[]
    by: CampanaScalarFieldEnum[] | CampanaScalarFieldEnum
    having?: CampanaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CampanaCountAggregateInputType | true
    _avg?: CampanaAvgAggregateInputType
    _sum?: CampanaSumAggregateInputType
    _min?: CampanaMinAggregateInputType
    _max?: CampanaMaxAggregateInputType
  }

  export type CampanaGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    estado: string
    fechaInicio: Date
    fechaFin: Date | null
    campos: JsonValue
    prompt: string
    criteriosEvaluacion: JsonValue | null
    creadorId: number
    fechaCreacion: Date
    fechaActualizacion: Date
    _count: CampanaCountAggregateOutputType | null
    _avg: CampanaAvgAggregateOutputType | null
    _sum: CampanaSumAggregateOutputType | null
    _min: CampanaMinAggregateOutputType | null
    _max: CampanaMaxAggregateOutputType | null
  }

  type GetCampanaGroupByPayload<T extends CampanaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CampanaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CampanaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CampanaGroupByOutputType[P]>
            : GetScalarType<T[P], CampanaGroupByOutputType[P]>
        }
      >
    >


  export type CampanaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    estado?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    campos?: boolean
    prompt?: boolean
    criteriosEvaluacion?: boolean
    creadorId?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
    creador?: boolean | UsuarioDefaultArgs<ExtArgs>
    clientes?: boolean | Campana$clientesArgs<ExtArgs>
    _count?: boolean | CampanaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campana"]>

  export type CampanaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    estado?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    campos?: boolean
    prompt?: boolean
    criteriosEvaluacion?: boolean
    creadorId?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
    creador?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campana"]>

  export type CampanaSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    estado?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    campos?: boolean
    prompt?: boolean
    criteriosEvaluacion?: boolean
    creadorId?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
  }

  export type CampanaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creador?: boolean | UsuarioDefaultArgs<ExtArgs>
    clientes?: boolean | Campana$clientesArgs<ExtArgs>
    _count?: boolean | CampanaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CampanaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creador?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $CampanaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Campana"
    objects: {
      creador: Prisma.$UsuarioPayload<ExtArgs>
      clientes: Prisma.$ClienteSimuladoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
      estado: string
      fechaInicio: Date
      fechaFin: Date | null
      campos: Prisma.JsonValue
      prompt: string
      criteriosEvaluacion: Prisma.JsonValue | null
      creadorId: number
      fechaCreacion: Date
      fechaActualizacion: Date
    }, ExtArgs["result"]["campana"]>
    composites: {}
  }

  type CampanaGetPayload<S extends boolean | null | undefined | CampanaDefaultArgs> = $Result.GetResult<Prisma.$CampanaPayload, S>

  type CampanaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CampanaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CampanaCountAggregateInputType | true
    }

  export interface CampanaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Campana'], meta: { name: 'Campana' } }
    /**
     * Find zero or one Campana that matches the filter.
     * @param {CampanaFindUniqueArgs} args - Arguments to find a Campana
     * @example
     * // Get one Campana
     * const campana = await prisma.campana.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CampanaFindUniqueArgs>(args: SelectSubset<T, CampanaFindUniqueArgs<ExtArgs>>): Prisma__CampanaClient<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Campana that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CampanaFindUniqueOrThrowArgs} args - Arguments to find a Campana
     * @example
     * // Get one Campana
     * const campana = await prisma.campana.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CampanaFindUniqueOrThrowArgs>(args: SelectSubset<T, CampanaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CampanaClient<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Campana that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanaFindFirstArgs} args - Arguments to find a Campana
     * @example
     * // Get one Campana
     * const campana = await prisma.campana.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CampanaFindFirstArgs>(args?: SelectSubset<T, CampanaFindFirstArgs<ExtArgs>>): Prisma__CampanaClient<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Campana that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanaFindFirstOrThrowArgs} args - Arguments to find a Campana
     * @example
     * // Get one Campana
     * const campana = await prisma.campana.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CampanaFindFirstOrThrowArgs>(args?: SelectSubset<T, CampanaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CampanaClient<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Campanas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Campanas
     * const campanas = await prisma.campana.findMany()
     * 
     * // Get first 10 Campanas
     * const campanas = await prisma.campana.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const campanaWithIdOnly = await prisma.campana.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CampanaFindManyArgs>(args?: SelectSubset<T, CampanaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Campana.
     * @param {CampanaCreateArgs} args - Arguments to create a Campana.
     * @example
     * // Create one Campana
     * const Campana = await prisma.campana.create({
     *   data: {
     *     // ... data to create a Campana
     *   }
     * })
     * 
     */
    create<T extends CampanaCreateArgs>(args: SelectSubset<T, CampanaCreateArgs<ExtArgs>>): Prisma__CampanaClient<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Campanas.
     * @param {CampanaCreateManyArgs} args - Arguments to create many Campanas.
     * @example
     * // Create many Campanas
     * const campana = await prisma.campana.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CampanaCreateManyArgs>(args?: SelectSubset<T, CampanaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Campanas and returns the data saved in the database.
     * @param {CampanaCreateManyAndReturnArgs} args - Arguments to create many Campanas.
     * @example
     * // Create many Campanas
     * const campana = await prisma.campana.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Campanas and only return the `id`
     * const campanaWithIdOnly = await prisma.campana.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CampanaCreateManyAndReturnArgs>(args?: SelectSubset<T, CampanaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Campana.
     * @param {CampanaDeleteArgs} args - Arguments to delete one Campana.
     * @example
     * // Delete one Campana
     * const Campana = await prisma.campana.delete({
     *   where: {
     *     // ... filter to delete one Campana
     *   }
     * })
     * 
     */
    delete<T extends CampanaDeleteArgs>(args: SelectSubset<T, CampanaDeleteArgs<ExtArgs>>): Prisma__CampanaClient<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Campana.
     * @param {CampanaUpdateArgs} args - Arguments to update one Campana.
     * @example
     * // Update one Campana
     * const campana = await prisma.campana.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CampanaUpdateArgs>(args: SelectSubset<T, CampanaUpdateArgs<ExtArgs>>): Prisma__CampanaClient<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Campanas.
     * @param {CampanaDeleteManyArgs} args - Arguments to filter Campanas to delete.
     * @example
     * // Delete a few Campanas
     * const { count } = await prisma.campana.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CampanaDeleteManyArgs>(args?: SelectSubset<T, CampanaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Campanas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Campanas
     * const campana = await prisma.campana.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CampanaUpdateManyArgs>(args: SelectSubset<T, CampanaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Campana.
     * @param {CampanaUpsertArgs} args - Arguments to update or create a Campana.
     * @example
     * // Update or create a Campana
     * const campana = await prisma.campana.upsert({
     *   create: {
     *     // ... data to create a Campana
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Campana we want to update
     *   }
     * })
     */
    upsert<T extends CampanaUpsertArgs>(args: SelectSubset<T, CampanaUpsertArgs<ExtArgs>>): Prisma__CampanaClient<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Campanas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanaCountArgs} args - Arguments to filter Campanas to count.
     * @example
     * // Count the number of Campanas
     * const count = await prisma.campana.count({
     *   where: {
     *     // ... the filter for the Campanas we want to count
     *   }
     * })
    **/
    count<T extends CampanaCountArgs>(
      args?: Subset<T, CampanaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CampanaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Campana.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CampanaAggregateArgs>(args: Subset<T, CampanaAggregateArgs>): Prisma.PrismaPromise<GetCampanaAggregateType<T>>

    /**
     * Group by Campana.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampanaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CampanaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CampanaGroupByArgs['orderBy'] }
        : { orderBy?: CampanaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CampanaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCampanaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Campana model
   */
  readonly fields: CampanaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Campana.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CampanaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    creador<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    clientes<T extends Campana$clientesArgs<ExtArgs> = {}>(args?: Subset<T, Campana$clientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Campana model
   */ 
  interface CampanaFieldRefs {
    readonly id: FieldRef<"Campana", 'Int'>
    readonly nombre: FieldRef<"Campana", 'String'>
    readonly descripcion: FieldRef<"Campana", 'String'>
    readonly estado: FieldRef<"Campana", 'String'>
    readonly fechaInicio: FieldRef<"Campana", 'DateTime'>
    readonly fechaFin: FieldRef<"Campana", 'DateTime'>
    readonly campos: FieldRef<"Campana", 'Json'>
    readonly prompt: FieldRef<"Campana", 'String'>
    readonly criteriosEvaluacion: FieldRef<"Campana", 'Json'>
    readonly creadorId: FieldRef<"Campana", 'Int'>
    readonly fechaCreacion: FieldRef<"Campana", 'DateTime'>
    readonly fechaActualizacion: FieldRef<"Campana", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Campana findUnique
   */
  export type CampanaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
    /**
     * Filter, which Campana to fetch.
     */
    where: CampanaWhereUniqueInput
  }

  /**
   * Campana findUniqueOrThrow
   */
  export type CampanaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
    /**
     * Filter, which Campana to fetch.
     */
    where: CampanaWhereUniqueInput
  }

  /**
   * Campana findFirst
   */
  export type CampanaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
    /**
     * Filter, which Campana to fetch.
     */
    where?: CampanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campanas to fetch.
     */
    orderBy?: CampanaOrderByWithRelationInput | CampanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Campanas.
     */
    cursor?: CampanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campanas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Campanas.
     */
    distinct?: CampanaScalarFieldEnum | CampanaScalarFieldEnum[]
  }

  /**
   * Campana findFirstOrThrow
   */
  export type CampanaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
    /**
     * Filter, which Campana to fetch.
     */
    where?: CampanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campanas to fetch.
     */
    orderBy?: CampanaOrderByWithRelationInput | CampanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Campanas.
     */
    cursor?: CampanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campanas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Campanas.
     */
    distinct?: CampanaScalarFieldEnum | CampanaScalarFieldEnum[]
  }

  /**
   * Campana findMany
   */
  export type CampanaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
    /**
     * Filter, which Campanas to fetch.
     */
    where?: CampanaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campanas to fetch.
     */
    orderBy?: CampanaOrderByWithRelationInput | CampanaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Campanas.
     */
    cursor?: CampanaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campanas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campanas.
     */
    skip?: number
    distinct?: CampanaScalarFieldEnum | CampanaScalarFieldEnum[]
  }

  /**
   * Campana create
   */
  export type CampanaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
    /**
     * The data needed to create a Campana.
     */
    data: XOR<CampanaCreateInput, CampanaUncheckedCreateInput>
  }

  /**
   * Campana createMany
   */
  export type CampanaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Campanas.
     */
    data: CampanaCreateManyInput | CampanaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Campana createManyAndReturn
   */
  export type CampanaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Campanas.
     */
    data: CampanaCreateManyInput | CampanaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Campana update
   */
  export type CampanaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
    /**
     * The data needed to update a Campana.
     */
    data: XOR<CampanaUpdateInput, CampanaUncheckedUpdateInput>
    /**
     * Choose, which Campana to update.
     */
    where: CampanaWhereUniqueInput
  }

  /**
   * Campana updateMany
   */
  export type CampanaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Campanas.
     */
    data: XOR<CampanaUpdateManyMutationInput, CampanaUncheckedUpdateManyInput>
    /**
     * Filter which Campanas to update
     */
    where?: CampanaWhereInput
  }

  /**
   * Campana upsert
   */
  export type CampanaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
    /**
     * The filter to search for the Campana to update in case it exists.
     */
    where: CampanaWhereUniqueInput
    /**
     * In case the Campana found by the `where` argument doesn't exist, create a new Campana with this data.
     */
    create: XOR<CampanaCreateInput, CampanaUncheckedCreateInput>
    /**
     * In case the Campana was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CampanaUpdateInput, CampanaUncheckedUpdateInput>
  }

  /**
   * Campana delete
   */
  export type CampanaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
    /**
     * Filter which Campana to delete.
     */
    where: CampanaWhereUniqueInput
  }

  /**
   * Campana deleteMany
   */
  export type CampanaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Campanas to delete
     */
    where?: CampanaWhereInput
  }

  /**
   * Campana.clientes
   */
  export type Campana$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoInclude<ExtArgs> | null
    where?: ClienteSimuladoWhereInput
    orderBy?: ClienteSimuladoOrderByWithRelationInput | ClienteSimuladoOrderByWithRelationInput[]
    cursor?: ClienteSimuladoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClienteSimuladoScalarFieldEnum | ClienteSimuladoScalarFieldEnum[]
  }

  /**
   * Campana without action
   */
  export type CampanaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
  }


  /**
   * Model ClienteSimulado
   */

  export type AggregateClienteSimulado = {
    _count: ClienteSimuladoCountAggregateOutputType | null
    _avg: ClienteSimuladoAvgAggregateOutputType | null
    _sum: ClienteSimuladoSumAggregateOutputType | null
    _min: ClienteSimuladoMinAggregateOutputType | null
    _max: ClienteSimuladoMaxAggregateOutputType | null
  }

  export type ClienteSimuladoAvgAggregateOutputType = {
    id: number | null
    campanaId: number | null
    asignadoA: number | null
  }

  export type ClienteSimuladoSumAggregateOutputType = {
    id: number | null
    campanaId: number | null
    asignadoA: number | null
  }

  export type ClienteSimuladoMinAggregateOutputType = {
    id: number | null
    campanaId: number | null
    estado: string | null
    asignadoA: number | null
    fechaAsignacion: Date | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
  }

  export type ClienteSimuladoMaxAggregateOutputType = {
    id: number | null
    campanaId: number | null
    estado: string | null
    asignadoA: number | null
    fechaAsignacion: Date | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
  }

  export type ClienteSimuladoCountAggregateOutputType = {
    id: number
    campanaId: number
    datos: number
    estado: number
    asignadoA: number
    fechaAsignacion: number
    fechaCreacion: number
    fechaActualizacion: number
    _all: number
  }


  export type ClienteSimuladoAvgAggregateInputType = {
    id?: true
    campanaId?: true
    asignadoA?: true
  }

  export type ClienteSimuladoSumAggregateInputType = {
    id?: true
    campanaId?: true
    asignadoA?: true
  }

  export type ClienteSimuladoMinAggregateInputType = {
    id?: true
    campanaId?: true
    estado?: true
    asignadoA?: true
    fechaAsignacion?: true
    fechaCreacion?: true
    fechaActualizacion?: true
  }

  export type ClienteSimuladoMaxAggregateInputType = {
    id?: true
    campanaId?: true
    estado?: true
    asignadoA?: true
    fechaAsignacion?: true
    fechaCreacion?: true
    fechaActualizacion?: true
  }

  export type ClienteSimuladoCountAggregateInputType = {
    id?: true
    campanaId?: true
    datos?: true
    estado?: true
    asignadoA?: true
    fechaAsignacion?: true
    fechaCreacion?: true
    fechaActualizacion?: true
    _all?: true
  }

  export type ClienteSimuladoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClienteSimulado to aggregate.
     */
    where?: ClienteSimuladoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClienteSimulados to fetch.
     */
    orderBy?: ClienteSimuladoOrderByWithRelationInput | ClienteSimuladoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClienteSimuladoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClienteSimulados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClienteSimulados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ClienteSimulados
    **/
    _count?: true | ClienteSimuladoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteSimuladoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSimuladoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteSimuladoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteSimuladoMaxAggregateInputType
  }

  export type GetClienteSimuladoAggregateType<T extends ClienteSimuladoAggregateArgs> = {
        [P in keyof T & keyof AggregateClienteSimulado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClienteSimulado[P]>
      : GetScalarType<T[P], AggregateClienteSimulado[P]>
  }




  export type ClienteSimuladoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteSimuladoWhereInput
    orderBy?: ClienteSimuladoOrderByWithAggregationInput | ClienteSimuladoOrderByWithAggregationInput[]
    by: ClienteSimuladoScalarFieldEnum[] | ClienteSimuladoScalarFieldEnum
    having?: ClienteSimuladoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteSimuladoCountAggregateInputType | true
    _avg?: ClienteSimuladoAvgAggregateInputType
    _sum?: ClienteSimuladoSumAggregateInputType
    _min?: ClienteSimuladoMinAggregateInputType
    _max?: ClienteSimuladoMaxAggregateInputType
  }

  export type ClienteSimuladoGroupByOutputType = {
    id: number
    campanaId: number | null
    datos: JsonValue | null
    estado: string
    asignadoA: number | null
    fechaAsignacion: Date | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
    _count: ClienteSimuladoCountAggregateOutputType | null
    _avg: ClienteSimuladoAvgAggregateOutputType | null
    _sum: ClienteSimuladoSumAggregateOutputType | null
    _min: ClienteSimuladoMinAggregateOutputType | null
    _max: ClienteSimuladoMaxAggregateOutputType | null
  }

  type GetClienteSimuladoGroupByPayload<T extends ClienteSimuladoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteSimuladoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteSimuladoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteSimuladoGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteSimuladoGroupByOutputType[P]>
        }
      >
    >


  export type ClienteSimuladoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    campanaId?: boolean
    datos?: boolean
    estado?: boolean
    asignadoA?: boolean
    fechaAsignacion?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
    campana?: boolean | ClienteSimulado$campanaArgs<ExtArgs>
    simulaciones?: boolean | ClienteSimulado$simulacionesArgs<ExtArgs>
    _count?: boolean | ClienteSimuladoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clienteSimulado"]>

  export type ClienteSimuladoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    campanaId?: boolean
    datos?: boolean
    estado?: boolean
    asignadoA?: boolean
    fechaAsignacion?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
    campana?: boolean | ClienteSimulado$campanaArgs<ExtArgs>
  }, ExtArgs["result"]["clienteSimulado"]>

  export type ClienteSimuladoSelectScalar = {
    id?: boolean
    campanaId?: boolean
    datos?: boolean
    estado?: boolean
    asignadoA?: boolean
    fechaAsignacion?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
  }

  export type ClienteSimuladoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campana?: boolean | ClienteSimulado$campanaArgs<ExtArgs>
    simulaciones?: boolean | ClienteSimulado$simulacionesArgs<ExtArgs>
    _count?: boolean | ClienteSimuladoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClienteSimuladoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campana?: boolean | ClienteSimulado$campanaArgs<ExtArgs>
  }

  export type $ClienteSimuladoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ClienteSimulado"
    objects: {
      campana: Prisma.$CampanaPayload<ExtArgs> | null
      simulaciones: Prisma.$SimulacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      campanaId: number | null
      datos: Prisma.JsonValue | null
      estado: string
      asignadoA: number | null
      fechaAsignacion: Date | null
      fechaCreacion: Date | null
      fechaActualizacion: Date | null
    }, ExtArgs["result"]["clienteSimulado"]>
    composites: {}
  }

  type ClienteSimuladoGetPayload<S extends boolean | null | undefined | ClienteSimuladoDefaultArgs> = $Result.GetResult<Prisma.$ClienteSimuladoPayload, S>

  type ClienteSimuladoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ClienteSimuladoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClienteSimuladoCountAggregateInputType | true
    }

  export interface ClienteSimuladoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClienteSimulado'], meta: { name: 'ClienteSimulado' } }
    /**
     * Find zero or one ClienteSimulado that matches the filter.
     * @param {ClienteSimuladoFindUniqueArgs} args - Arguments to find a ClienteSimulado
     * @example
     * // Get one ClienteSimulado
     * const clienteSimulado = await prisma.clienteSimulado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClienteSimuladoFindUniqueArgs>(args: SelectSubset<T, ClienteSimuladoFindUniqueArgs<ExtArgs>>): Prisma__ClienteSimuladoClient<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ClienteSimulado that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ClienteSimuladoFindUniqueOrThrowArgs} args - Arguments to find a ClienteSimulado
     * @example
     * // Get one ClienteSimulado
     * const clienteSimulado = await prisma.clienteSimulado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClienteSimuladoFindUniqueOrThrowArgs>(args: SelectSubset<T, ClienteSimuladoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClienteSimuladoClient<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ClienteSimulado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteSimuladoFindFirstArgs} args - Arguments to find a ClienteSimulado
     * @example
     * // Get one ClienteSimulado
     * const clienteSimulado = await prisma.clienteSimulado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClienteSimuladoFindFirstArgs>(args?: SelectSubset<T, ClienteSimuladoFindFirstArgs<ExtArgs>>): Prisma__ClienteSimuladoClient<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ClienteSimulado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteSimuladoFindFirstOrThrowArgs} args - Arguments to find a ClienteSimulado
     * @example
     * // Get one ClienteSimulado
     * const clienteSimulado = await prisma.clienteSimulado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClienteSimuladoFindFirstOrThrowArgs>(args?: SelectSubset<T, ClienteSimuladoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClienteSimuladoClient<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ClienteSimulados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteSimuladoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ClienteSimulados
     * const clienteSimulados = await prisma.clienteSimulado.findMany()
     * 
     * // Get first 10 ClienteSimulados
     * const clienteSimulados = await prisma.clienteSimulado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clienteSimuladoWithIdOnly = await prisma.clienteSimulado.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClienteSimuladoFindManyArgs>(args?: SelectSubset<T, ClienteSimuladoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ClienteSimulado.
     * @param {ClienteSimuladoCreateArgs} args - Arguments to create a ClienteSimulado.
     * @example
     * // Create one ClienteSimulado
     * const ClienteSimulado = await prisma.clienteSimulado.create({
     *   data: {
     *     // ... data to create a ClienteSimulado
     *   }
     * })
     * 
     */
    create<T extends ClienteSimuladoCreateArgs>(args: SelectSubset<T, ClienteSimuladoCreateArgs<ExtArgs>>): Prisma__ClienteSimuladoClient<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ClienteSimulados.
     * @param {ClienteSimuladoCreateManyArgs} args - Arguments to create many ClienteSimulados.
     * @example
     * // Create many ClienteSimulados
     * const clienteSimulado = await prisma.clienteSimulado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClienteSimuladoCreateManyArgs>(args?: SelectSubset<T, ClienteSimuladoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ClienteSimulados and returns the data saved in the database.
     * @param {ClienteSimuladoCreateManyAndReturnArgs} args - Arguments to create many ClienteSimulados.
     * @example
     * // Create many ClienteSimulados
     * const clienteSimulado = await prisma.clienteSimulado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ClienteSimulados and only return the `id`
     * const clienteSimuladoWithIdOnly = await prisma.clienteSimulado.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClienteSimuladoCreateManyAndReturnArgs>(args?: SelectSubset<T, ClienteSimuladoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ClienteSimulado.
     * @param {ClienteSimuladoDeleteArgs} args - Arguments to delete one ClienteSimulado.
     * @example
     * // Delete one ClienteSimulado
     * const ClienteSimulado = await prisma.clienteSimulado.delete({
     *   where: {
     *     // ... filter to delete one ClienteSimulado
     *   }
     * })
     * 
     */
    delete<T extends ClienteSimuladoDeleteArgs>(args: SelectSubset<T, ClienteSimuladoDeleteArgs<ExtArgs>>): Prisma__ClienteSimuladoClient<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ClienteSimulado.
     * @param {ClienteSimuladoUpdateArgs} args - Arguments to update one ClienteSimulado.
     * @example
     * // Update one ClienteSimulado
     * const clienteSimulado = await prisma.clienteSimulado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClienteSimuladoUpdateArgs>(args: SelectSubset<T, ClienteSimuladoUpdateArgs<ExtArgs>>): Prisma__ClienteSimuladoClient<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ClienteSimulados.
     * @param {ClienteSimuladoDeleteManyArgs} args - Arguments to filter ClienteSimulados to delete.
     * @example
     * // Delete a few ClienteSimulados
     * const { count } = await prisma.clienteSimulado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClienteSimuladoDeleteManyArgs>(args?: SelectSubset<T, ClienteSimuladoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClienteSimulados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteSimuladoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ClienteSimulados
     * const clienteSimulado = await prisma.clienteSimulado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClienteSimuladoUpdateManyArgs>(args: SelectSubset<T, ClienteSimuladoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ClienteSimulado.
     * @param {ClienteSimuladoUpsertArgs} args - Arguments to update or create a ClienteSimulado.
     * @example
     * // Update or create a ClienteSimulado
     * const clienteSimulado = await prisma.clienteSimulado.upsert({
     *   create: {
     *     // ... data to create a ClienteSimulado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ClienteSimulado we want to update
     *   }
     * })
     */
    upsert<T extends ClienteSimuladoUpsertArgs>(args: SelectSubset<T, ClienteSimuladoUpsertArgs<ExtArgs>>): Prisma__ClienteSimuladoClient<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ClienteSimulados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteSimuladoCountArgs} args - Arguments to filter ClienteSimulados to count.
     * @example
     * // Count the number of ClienteSimulados
     * const count = await prisma.clienteSimulado.count({
     *   where: {
     *     // ... the filter for the ClienteSimulados we want to count
     *   }
     * })
    **/
    count<T extends ClienteSimuladoCountArgs>(
      args?: Subset<T, ClienteSimuladoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteSimuladoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ClienteSimulado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteSimuladoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteSimuladoAggregateArgs>(args: Subset<T, ClienteSimuladoAggregateArgs>): Prisma.PrismaPromise<GetClienteSimuladoAggregateType<T>>

    /**
     * Group by ClienteSimulado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteSimuladoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClienteSimuladoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClienteSimuladoGroupByArgs['orderBy'] }
        : { orderBy?: ClienteSimuladoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClienteSimuladoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteSimuladoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ClienteSimulado model
   */
  readonly fields: ClienteSimuladoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ClienteSimulado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClienteSimuladoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    campana<T extends ClienteSimulado$campanaArgs<ExtArgs> = {}>(args?: Subset<T, ClienteSimulado$campanaArgs<ExtArgs>>): Prisma__CampanaClient<$Result.GetResult<Prisma.$CampanaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    simulaciones<T extends ClienteSimulado$simulacionesArgs<ExtArgs> = {}>(args?: Subset<T, ClienteSimulado$simulacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ClienteSimulado model
   */ 
  interface ClienteSimuladoFieldRefs {
    readonly id: FieldRef<"ClienteSimulado", 'Int'>
    readonly campanaId: FieldRef<"ClienteSimulado", 'Int'>
    readonly datos: FieldRef<"ClienteSimulado", 'Json'>
    readonly estado: FieldRef<"ClienteSimulado", 'String'>
    readonly asignadoA: FieldRef<"ClienteSimulado", 'Int'>
    readonly fechaAsignacion: FieldRef<"ClienteSimulado", 'DateTime'>
    readonly fechaCreacion: FieldRef<"ClienteSimulado", 'DateTime'>
    readonly fechaActualizacion: FieldRef<"ClienteSimulado", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ClienteSimulado findUnique
   */
  export type ClienteSimuladoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoInclude<ExtArgs> | null
    /**
     * Filter, which ClienteSimulado to fetch.
     */
    where: ClienteSimuladoWhereUniqueInput
  }

  /**
   * ClienteSimulado findUniqueOrThrow
   */
  export type ClienteSimuladoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoInclude<ExtArgs> | null
    /**
     * Filter, which ClienteSimulado to fetch.
     */
    where: ClienteSimuladoWhereUniqueInput
  }

  /**
   * ClienteSimulado findFirst
   */
  export type ClienteSimuladoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoInclude<ExtArgs> | null
    /**
     * Filter, which ClienteSimulado to fetch.
     */
    where?: ClienteSimuladoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClienteSimulados to fetch.
     */
    orderBy?: ClienteSimuladoOrderByWithRelationInput | ClienteSimuladoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClienteSimulados.
     */
    cursor?: ClienteSimuladoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClienteSimulados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClienteSimulados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClienteSimulados.
     */
    distinct?: ClienteSimuladoScalarFieldEnum | ClienteSimuladoScalarFieldEnum[]
  }

  /**
   * ClienteSimulado findFirstOrThrow
   */
  export type ClienteSimuladoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoInclude<ExtArgs> | null
    /**
     * Filter, which ClienteSimulado to fetch.
     */
    where?: ClienteSimuladoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClienteSimulados to fetch.
     */
    orderBy?: ClienteSimuladoOrderByWithRelationInput | ClienteSimuladoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClienteSimulados.
     */
    cursor?: ClienteSimuladoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClienteSimulados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClienteSimulados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClienteSimulados.
     */
    distinct?: ClienteSimuladoScalarFieldEnum | ClienteSimuladoScalarFieldEnum[]
  }

  /**
   * ClienteSimulado findMany
   */
  export type ClienteSimuladoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoInclude<ExtArgs> | null
    /**
     * Filter, which ClienteSimulados to fetch.
     */
    where?: ClienteSimuladoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClienteSimulados to fetch.
     */
    orderBy?: ClienteSimuladoOrderByWithRelationInput | ClienteSimuladoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ClienteSimulados.
     */
    cursor?: ClienteSimuladoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClienteSimulados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClienteSimulados.
     */
    skip?: number
    distinct?: ClienteSimuladoScalarFieldEnum | ClienteSimuladoScalarFieldEnum[]
  }

  /**
   * ClienteSimulado create
   */
  export type ClienteSimuladoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoInclude<ExtArgs> | null
    /**
     * The data needed to create a ClienteSimulado.
     */
    data?: XOR<ClienteSimuladoCreateInput, ClienteSimuladoUncheckedCreateInput>
  }

  /**
   * ClienteSimulado createMany
   */
  export type ClienteSimuladoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ClienteSimulados.
     */
    data: ClienteSimuladoCreateManyInput | ClienteSimuladoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClienteSimulado createManyAndReturn
   */
  export type ClienteSimuladoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ClienteSimulados.
     */
    data: ClienteSimuladoCreateManyInput | ClienteSimuladoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClienteSimulado update
   */
  export type ClienteSimuladoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoInclude<ExtArgs> | null
    /**
     * The data needed to update a ClienteSimulado.
     */
    data: XOR<ClienteSimuladoUpdateInput, ClienteSimuladoUncheckedUpdateInput>
    /**
     * Choose, which ClienteSimulado to update.
     */
    where: ClienteSimuladoWhereUniqueInput
  }

  /**
   * ClienteSimulado updateMany
   */
  export type ClienteSimuladoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ClienteSimulados.
     */
    data: XOR<ClienteSimuladoUpdateManyMutationInput, ClienteSimuladoUncheckedUpdateManyInput>
    /**
     * Filter which ClienteSimulados to update
     */
    where?: ClienteSimuladoWhereInput
  }

  /**
   * ClienteSimulado upsert
   */
  export type ClienteSimuladoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoInclude<ExtArgs> | null
    /**
     * The filter to search for the ClienteSimulado to update in case it exists.
     */
    where: ClienteSimuladoWhereUniqueInput
    /**
     * In case the ClienteSimulado found by the `where` argument doesn't exist, create a new ClienteSimulado with this data.
     */
    create: XOR<ClienteSimuladoCreateInput, ClienteSimuladoUncheckedCreateInput>
    /**
     * In case the ClienteSimulado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClienteSimuladoUpdateInput, ClienteSimuladoUncheckedUpdateInput>
  }

  /**
   * ClienteSimulado delete
   */
  export type ClienteSimuladoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoInclude<ExtArgs> | null
    /**
     * Filter which ClienteSimulado to delete.
     */
    where: ClienteSimuladoWhereUniqueInput
  }

  /**
   * ClienteSimulado deleteMany
   */
  export type ClienteSimuladoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClienteSimulados to delete
     */
    where?: ClienteSimuladoWhereInput
  }

  /**
   * ClienteSimulado.campana
   */
  export type ClienteSimulado$campanaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campana
     */
    select?: CampanaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampanaInclude<ExtArgs> | null
    where?: CampanaWhereInput
  }

  /**
   * ClienteSimulado.simulaciones
   */
  export type ClienteSimulado$simulacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
    where?: SimulacionWhereInput
    orderBy?: SimulacionOrderByWithRelationInput | SimulacionOrderByWithRelationInput[]
    cursor?: SimulacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SimulacionScalarFieldEnum | SimulacionScalarFieldEnum[]
  }

  /**
   * ClienteSimulado without action
   */
  export type ClienteSimuladoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteSimulado
     */
    select?: ClienteSimuladoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteSimuladoInclude<ExtArgs> | null
  }


  /**
   * Model Simulacion
   */

  export type AggregateSimulacion = {
    _count: SimulacionCountAggregateOutputType | null
    _avg: SimulacionAvgAggregateOutputType | null
    _sum: SimulacionSumAggregateOutputType | null
    _min: SimulacionMinAggregateOutputType | null
    _max: SimulacionMaxAggregateOutputType | null
  }

  export type SimulacionAvgAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
    duracion: number | null
    calificacion: number | null
  }

  export type SimulacionSumAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
    duracion: number | null
    calificacion: number | null
  }

  export type SimulacionMinAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
    sessionId: string | null
    estado: string | null
    fechaInicio: Date | null
    fechaFin: Date | null
    duracion: number | null
    calificacion: number | null
    feedback: string | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
  }

  export type SimulacionMaxAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
    sessionId: string | null
    estado: string | null
    fechaInicio: Date | null
    fechaFin: Date | null
    duracion: number | null
    calificacion: number | null
    feedback: string | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
  }

  export type SimulacionCountAggregateOutputType = {
    id: number
    clienteId: number
    usuarioId: number
    sessionId: number
    estado: number
    fechaInicio: number
    fechaFin: number
    duracion: number
    transcripcion: number
    calificacion: number
    feedback: number
    evaluacion: number
    tipificacion: number
    fechaCreacion: number
    fechaActualizacion: number
    _all: number
  }


  export type SimulacionAvgAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    duracion?: true
    calificacion?: true
  }

  export type SimulacionSumAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    duracion?: true
    calificacion?: true
  }

  export type SimulacionMinAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    sessionId?: true
    estado?: true
    fechaInicio?: true
    fechaFin?: true
    duracion?: true
    calificacion?: true
    feedback?: true
    fechaCreacion?: true
    fechaActualizacion?: true
  }

  export type SimulacionMaxAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    sessionId?: true
    estado?: true
    fechaInicio?: true
    fechaFin?: true
    duracion?: true
    calificacion?: true
    feedback?: true
    fechaCreacion?: true
    fechaActualizacion?: true
  }

  export type SimulacionCountAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    sessionId?: true
    estado?: true
    fechaInicio?: true
    fechaFin?: true
    duracion?: true
    transcripcion?: true
    calificacion?: true
    feedback?: true
    evaluacion?: true
    tipificacion?: true
    fechaCreacion?: true
    fechaActualizacion?: true
    _all?: true
  }

  export type SimulacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Simulacion to aggregate.
     */
    where?: SimulacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Simulacions to fetch.
     */
    orderBy?: SimulacionOrderByWithRelationInput | SimulacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SimulacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Simulacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Simulacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Simulacions
    **/
    _count?: true | SimulacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SimulacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SimulacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SimulacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SimulacionMaxAggregateInputType
  }

  export type GetSimulacionAggregateType<T extends SimulacionAggregateArgs> = {
        [P in keyof T & keyof AggregateSimulacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSimulacion[P]>
      : GetScalarType<T[P], AggregateSimulacion[P]>
  }




  export type SimulacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SimulacionWhereInput
    orderBy?: SimulacionOrderByWithAggregationInput | SimulacionOrderByWithAggregationInput[]
    by: SimulacionScalarFieldEnum[] | SimulacionScalarFieldEnum
    having?: SimulacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SimulacionCountAggregateInputType | true
    _avg?: SimulacionAvgAggregateInputType
    _sum?: SimulacionSumAggregateInputType
    _min?: SimulacionMinAggregateInputType
    _max?: SimulacionMaxAggregateInputType
  }

  export type SimulacionGroupByOutputType = {
    id: number
    clienteId: number
    usuarioId: number
    sessionId: string
    estado: string
    fechaInicio: Date
    fechaFin: Date | null
    duracion: number | null
    transcripcion: JsonValue
    calificacion: number | null
    feedback: string | null
    evaluacion: JsonValue | null
    tipificacion: JsonValue | null
    fechaCreacion: Date
    fechaActualizacion: Date
    _count: SimulacionCountAggregateOutputType | null
    _avg: SimulacionAvgAggregateOutputType | null
    _sum: SimulacionSumAggregateOutputType | null
    _min: SimulacionMinAggregateOutputType | null
    _max: SimulacionMaxAggregateOutputType | null
  }

  type GetSimulacionGroupByPayload<T extends SimulacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SimulacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SimulacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SimulacionGroupByOutputType[P]>
            : GetScalarType<T[P], SimulacionGroupByOutputType[P]>
        }
      >
    >


  export type SimulacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    usuarioId?: boolean
    sessionId?: boolean
    estado?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    duracion?: boolean
    transcripcion?: boolean
    calificacion?: boolean
    feedback?: boolean
    evaluacion?: boolean
    tipificacion?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
    cliente?: boolean | ClienteSimuladoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["simulacion"]>

  export type SimulacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    usuarioId?: boolean
    sessionId?: boolean
    estado?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    duracion?: boolean
    transcripcion?: boolean
    calificacion?: boolean
    feedback?: boolean
    evaluacion?: boolean
    tipificacion?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
    cliente?: boolean | ClienteSimuladoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["simulacion"]>

  export type SimulacionSelectScalar = {
    id?: boolean
    clienteId?: boolean
    usuarioId?: boolean
    sessionId?: boolean
    estado?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    duracion?: boolean
    transcripcion?: boolean
    calificacion?: boolean
    feedback?: boolean
    evaluacion?: boolean
    tipificacion?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
  }

  export type SimulacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteSimuladoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type SimulacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteSimuladoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $SimulacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Simulacion"
    objects: {
      cliente: Prisma.$ClienteSimuladoPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clienteId: number
      usuarioId: number
      sessionId: string
      estado: string
      fechaInicio: Date
      fechaFin: Date | null
      duracion: number | null
      transcripcion: Prisma.JsonValue
      calificacion: number | null
      feedback: string | null
      evaluacion: Prisma.JsonValue | null
      tipificacion: Prisma.JsonValue | null
      fechaCreacion: Date
      fechaActualizacion: Date
    }, ExtArgs["result"]["simulacion"]>
    composites: {}
  }

  type SimulacionGetPayload<S extends boolean | null | undefined | SimulacionDefaultArgs> = $Result.GetResult<Prisma.$SimulacionPayload, S>

  type SimulacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SimulacionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SimulacionCountAggregateInputType | true
    }

  export interface SimulacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Simulacion'], meta: { name: 'Simulacion' } }
    /**
     * Find zero or one Simulacion that matches the filter.
     * @param {SimulacionFindUniqueArgs} args - Arguments to find a Simulacion
     * @example
     * // Get one Simulacion
     * const simulacion = await prisma.simulacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SimulacionFindUniqueArgs>(args: SelectSubset<T, SimulacionFindUniqueArgs<ExtArgs>>): Prisma__SimulacionClient<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Simulacion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SimulacionFindUniqueOrThrowArgs} args - Arguments to find a Simulacion
     * @example
     * // Get one Simulacion
     * const simulacion = await prisma.simulacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SimulacionFindUniqueOrThrowArgs>(args: SelectSubset<T, SimulacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SimulacionClient<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Simulacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacionFindFirstArgs} args - Arguments to find a Simulacion
     * @example
     * // Get one Simulacion
     * const simulacion = await prisma.simulacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SimulacionFindFirstArgs>(args?: SelectSubset<T, SimulacionFindFirstArgs<ExtArgs>>): Prisma__SimulacionClient<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Simulacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacionFindFirstOrThrowArgs} args - Arguments to find a Simulacion
     * @example
     * // Get one Simulacion
     * const simulacion = await prisma.simulacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SimulacionFindFirstOrThrowArgs>(args?: SelectSubset<T, SimulacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SimulacionClient<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Simulacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Simulacions
     * const simulacions = await prisma.simulacion.findMany()
     * 
     * // Get first 10 Simulacions
     * const simulacions = await prisma.simulacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const simulacionWithIdOnly = await prisma.simulacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SimulacionFindManyArgs>(args?: SelectSubset<T, SimulacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Simulacion.
     * @param {SimulacionCreateArgs} args - Arguments to create a Simulacion.
     * @example
     * // Create one Simulacion
     * const Simulacion = await prisma.simulacion.create({
     *   data: {
     *     // ... data to create a Simulacion
     *   }
     * })
     * 
     */
    create<T extends SimulacionCreateArgs>(args: SelectSubset<T, SimulacionCreateArgs<ExtArgs>>): Prisma__SimulacionClient<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Simulacions.
     * @param {SimulacionCreateManyArgs} args - Arguments to create many Simulacions.
     * @example
     * // Create many Simulacions
     * const simulacion = await prisma.simulacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SimulacionCreateManyArgs>(args?: SelectSubset<T, SimulacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Simulacions and returns the data saved in the database.
     * @param {SimulacionCreateManyAndReturnArgs} args - Arguments to create many Simulacions.
     * @example
     * // Create many Simulacions
     * const simulacion = await prisma.simulacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Simulacions and only return the `id`
     * const simulacionWithIdOnly = await prisma.simulacion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SimulacionCreateManyAndReturnArgs>(args?: SelectSubset<T, SimulacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Simulacion.
     * @param {SimulacionDeleteArgs} args - Arguments to delete one Simulacion.
     * @example
     * // Delete one Simulacion
     * const Simulacion = await prisma.simulacion.delete({
     *   where: {
     *     // ... filter to delete one Simulacion
     *   }
     * })
     * 
     */
    delete<T extends SimulacionDeleteArgs>(args: SelectSubset<T, SimulacionDeleteArgs<ExtArgs>>): Prisma__SimulacionClient<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Simulacion.
     * @param {SimulacionUpdateArgs} args - Arguments to update one Simulacion.
     * @example
     * // Update one Simulacion
     * const simulacion = await prisma.simulacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SimulacionUpdateArgs>(args: SelectSubset<T, SimulacionUpdateArgs<ExtArgs>>): Prisma__SimulacionClient<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Simulacions.
     * @param {SimulacionDeleteManyArgs} args - Arguments to filter Simulacions to delete.
     * @example
     * // Delete a few Simulacions
     * const { count } = await prisma.simulacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SimulacionDeleteManyArgs>(args?: SelectSubset<T, SimulacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Simulacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Simulacions
     * const simulacion = await prisma.simulacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SimulacionUpdateManyArgs>(args: SelectSubset<T, SimulacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Simulacion.
     * @param {SimulacionUpsertArgs} args - Arguments to update or create a Simulacion.
     * @example
     * // Update or create a Simulacion
     * const simulacion = await prisma.simulacion.upsert({
     *   create: {
     *     // ... data to create a Simulacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Simulacion we want to update
     *   }
     * })
     */
    upsert<T extends SimulacionUpsertArgs>(args: SelectSubset<T, SimulacionUpsertArgs<ExtArgs>>): Prisma__SimulacionClient<$Result.GetResult<Prisma.$SimulacionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Simulacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacionCountArgs} args - Arguments to filter Simulacions to count.
     * @example
     * // Count the number of Simulacions
     * const count = await prisma.simulacion.count({
     *   where: {
     *     // ... the filter for the Simulacions we want to count
     *   }
     * })
    **/
    count<T extends SimulacionCountArgs>(
      args?: Subset<T, SimulacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SimulacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Simulacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SimulacionAggregateArgs>(args: Subset<T, SimulacionAggregateArgs>): Prisma.PrismaPromise<GetSimulacionAggregateType<T>>

    /**
     * Group by Simulacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SimulacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SimulacionGroupByArgs['orderBy'] }
        : { orderBy?: SimulacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SimulacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSimulacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Simulacion model
   */
  readonly fields: SimulacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Simulacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SimulacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteSimuladoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteSimuladoDefaultArgs<ExtArgs>>): Prisma__ClienteSimuladoClient<$Result.GetResult<Prisma.$ClienteSimuladoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Simulacion model
   */ 
  interface SimulacionFieldRefs {
    readonly id: FieldRef<"Simulacion", 'Int'>
    readonly clienteId: FieldRef<"Simulacion", 'Int'>
    readonly usuarioId: FieldRef<"Simulacion", 'Int'>
    readonly sessionId: FieldRef<"Simulacion", 'String'>
    readonly estado: FieldRef<"Simulacion", 'String'>
    readonly fechaInicio: FieldRef<"Simulacion", 'DateTime'>
    readonly fechaFin: FieldRef<"Simulacion", 'DateTime'>
    readonly duracion: FieldRef<"Simulacion", 'Int'>
    readonly transcripcion: FieldRef<"Simulacion", 'Json'>
    readonly calificacion: FieldRef<"Simulacion", 'Float'>
    readonly feedback: FieldRef<"Simulacion", 'String'>
    readonly evaluacion: FieldRef<"Simulacion", 'Json'>
    readonly tipificacion: FieldRef<"Simulacion", 'Json'>
    readonly fechaCreacion: FieldRef<"Simulacion", 'DateTime'>
    readonly fechaActualizacion: FieldRef<"Simulacion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Simulacion findUnique
   */
  export type SimulacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
    /**
     * Filter, which Simulacion to fetch.
     */
    where: SimulacionWhereUniqueInput
  }

  /**
   * Simulacion findUniqueOrThrow
   */
  export type SimulacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
    /**
     * Filter, which Simulacion to fetch.
     */
    where: SimulacionWhereUniqueInput
  }

  /**
   * Simulacion findFirst
   */
  export type SimulacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
    /**
     * Filter, which Simulacion to fetch.
     */
    where?: SimulacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Simulacions to fetch.
     */
    orderBy?: SimulacionOrderByWithRelationInput | SimulacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Simulacions.
     */
    cursor?: SimulacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Simulacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Simulacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Simulacions.
     */
    distinct?: SimulacionScalarFieldEnum | SimulacionScalarFieldEnum[]
  }

  /**
   * Simulacion findFirstOrThrow
   */
  export type SimulacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
    /**
     * Filter, which Simulacion to fetch.
     */
    where?: SimulacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Simulacions to fetch.
     */
    orderBy?: SimulacionOrderByWithRelationInput | SimulacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Simulacions.
     */
    cursor?: SimulacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Simulacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Simulacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Simulacions.
     */
    distinct?: SimulacionScalarFieldEnum | SimulacionScalarFieldEnum[]
  }

  /**
   * Simulacion findMany
   */
  export type SimulacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
    /**
     * Filter, which Simulacions to fetch.
     */
    where?: SimulacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Simulacions to fetch.
     */
    orderBy?: SimulacionOrderByWithRelationInput | SimulacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Simulacions.
     */
    cursor?: SimulacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Simulacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Simulacions.
     */
    skip?: number
    distinct?: SimulacionScalarFieldEnum | SimulacionScalarFieldEnum[]
  }

  /**
   * Simulacion create
   */
  export type SimulacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Simulacion.
     */
    data: XOR<SimulacionCreateInput, SimulacionUncheckedCreateInput>
  }

  /**
   * Simulacion createMany
   */
  export type SimulacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Simulacions.
     */
    data: SimulacionCreateManyInput | SimulacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Simulacion createManyAndReturn
   */
  export type SimulacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Simulacions.
     */
    data: SimulacionCreateManyInput | SimulacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Simulacion update
   */
  export type SimulacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Simulacion.
     */
    data: XOR<SimulacionUpdateInput, SimulacionUncheckedUpdateInput>
    /**
     * Choose, which Simulacion to update.
     */
    where: SimulacionWhereUniqueInput
  }

  /**
   * Simulacion updateMany
   */
  export type SimulacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Simulacions.
     */
    data: XOR<SimulacionUpdateManyMutationInput, SimulacionUncheckedUpdateManyInput>
    /**
     * Filter which Simulacions to update
     */
    where?: SimulacionWhereInput
  }

  /**
   * Simulacion upsert
   */
  export type SimulacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Simulacion to update in case it exists.
     */
    where: SimulacionWhereUniqueInput
    /**
     * In case the Simulacion found by the `where` argument doesn't exist, create a new Simulacion with this data.
     */
    create: XOR<SimulacionCreateInput, SimulacionUncheckedCreateInput>
    /**
     * In case the Simulacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SimulacionUpdateInput, SimulacionUncheckedUpdateInput>
  }

  /**
   * Simulacion delete
   */
  export type SimulacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
    /**
     * Filter which Simulacion to delete.
     */
    where: SimulacionWhereUniqueInput
  }

  /**
   * Simulacion deleteMany
   */
  export type SimulacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Simulacions to delete
     */
    where?: SimulacionWhereInput
  }

  /**
   * Simulacion without action
   */
  export type SimulacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacion
     */
    select?: SimulacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacionInclude<ExtArgs> | null
  }


  /**
   * Model ConfiguracionSistema
   */

  export type AggregateConfiguracionSistema = {
    _count: ConfiguracionSistemaCountAggregateOutputType | null
    _avg: ConfiguracionSistemaAvgAggregateOutputType | null
    _sum: ConfiguracionSistemaSumAggregateOutputType | null
    _min: ConfiguracionSistemaMinAggregateOutputType | null
    _max: ConfiguracionSistemaMaxAggregateOutputType | null
  }

  export type ConfiguracionSistemaAvgAggregateOutputType = {
    id: number | null
  }

  export type ConfiguracionSistemaSumAggregateOutputType = {
    id: number | null
  }

  export type ConfiguracionSistemaMinAggregateOutputType = {
    id: number | null
    clave: string | null
    descripcion: string | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
  }

  export type ConfiguracionSistemaMaxAggregateOutputType = {
    id: number | null
    clave: string | null
    descripcion: string | null
    fechaCreacion: Date | null
    fechaActualizacion: Date | null
  }

  export type ConfiguracionSistemaCountAggregateOutputType = {
    id: number
    clave: number
    valor: number
    descripcion: number
    fechaCreacion: number
    fechaActualizacion: number
    _all: number
  }


  export type ConfiguracionSistemaAvgAggregateInputType = {
    id?: true
  }

  export type ConfiguracionSistemaSumAggregateInputType = {
    id?: true
  }

  export type ConfiguracionSistemaMinAggregateInputType = {
    id?: true
    clave?: true
    descripcion?: true
    fechaCreacion?: true
    fechaActualizacion?: true
  }

  export type ConfiguracionSistemaMaxAggregateInputType = {
    id?: true
    clave?: true
    descripcion?: true
    fechaCreacion?: true
    fechaActualizacion?: true
  }

  export type ConfiguracionSistemaCountAggregateInputType = {
    id?: true
    clave?: true
    valor?: true
    descripcion?: true
    fechaCreacion?: true
    fechaActualizacion?: true
    _all?: true
  }

  export type ConfiguracionSistemaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfiguracionSistema to aggregate.
     */
    where?: ConfiguracionSistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracionSistemas to fetch.
     */
    orderBy?: ConfiguracionSistemaOrderByWithRelationInput | ConfiguracionSistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConfiguracionSistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracionSistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracionSistemas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ConfiguracionSistemas
    **/
    _count?: true | ConfiguracionSistemaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConfiguracionSistemaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConfiguracionSistemaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfiguracionSistemaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfiguracionSistemaMaxAggregateInputType
  }

  export type GetConfiguracionSistemaAggregateType<T extends ConfiguracionSistemaAggregateArgs> = {
        [P in keyof T & keyof AggregateConfiguracionSistema]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfiguracionSistema[P]>
      : GetScalarType<T[P], AggregateConfiguracionSistema[P]>
  }




  export type ConfiguracionSistemaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfiguracionSistemaWhereInput
    orderBy?: ConfiguracionSistemaOrderByWithAggregationInput | ConfiguracionSistemaOrderByWithAggregationInput[]
    by: ConfiguracionSistemaScalarFieldEnum[] | ConfiguracionSistemaScalarFieldEnum
    having?: ConfiguracionSistemaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfiguracionSistemaCountAggregateInputType | true
    _avg?: ConfiguracionSistemaAvgAggregateInputType
    _sum?: ConfiguracionSistemaSumAggregateInputType
    _min?: ConfiguracionSistemaMinAggregateInputType
    _max?: ConfiguracionSistemaMaxAggregateInputType
  }

  export type ConfiguracionSistemaGroupByOutputType = {
    id: number
    clave: string
    valor: JsonValue
    descripcion: string | null
    fechaCreacion: Date
    fechaActualizacion: Date
    _count: ConfiguracionSistemaCountAggregateOutputType | null
    _avg: ConfiguracionSistemaAvgAggregateOutputType | null
    _sum: ConfiguracionSistemaSumAggregateOutputType | null
    _min: ConfiguracionSistemaMinAggregateOutputType | null
    _max: ConfiguracionSistemaMaxAggregateOutputType | null
  }

  type GetConfiguracionSistemaGroupByPayload<T extends ConfiguracionSistemaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfiguracionSistemaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfiguracionSistemaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfiguracionSistemaGroupByOutputType[P]>
            : GetScalarType<T[P], ConfiguracionSistemaGroupByOutputType[P]>
        }
      >
    >


  export type ConfiguracionSistemaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clave?: boolean
    valor?: boolean
    descripcion?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
  }, ExtArgs["result"]["configuracionSistema"]>

  export type ConfiguracionSistemaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clave?: boolean
    valor?: boolean
    descripcion?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
  }, ExtArgs["result"]["configuracionSistema"]>

  export type ConfiguracionSistemaSelectScalar = {
    id?: boolean
    clave?: boolean
    valor?: boolean
    descripcion?: boolean
    fechaCreacion?: boolean
    fechaActualizacion?: boolean
  }


  export type $ConfiguracionSistemaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ConfiguracionSistema"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clave: string
      valor: Prisma.JsonValue
      descripcion: string | null
      fechaCreacion: Date
      fechaActualizacion: Date
    }, ExtArgs["result"]["configuracionSistema"]>
    composites: {}
  }

  type ConfiguracionSistemaGetPayload<S extends boolean | null | undefined | ConfiguracionSistemaDefaultArgs> = $Result.GetResult<Prisma.$ConfiguracionSistemaPayload, S>

  type ConfiguracionSistemaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ConfiguracionSistemaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ConfiguracionSistemaCountAggregateInputType | true
    }

  export interface ConfiguracionSistemaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ConfiguracionSistema'], meta: { name: 'ConfiguracionSistema' } }
    /**
     * Find zero or one ConfiguracionSistema that matches the filter.
     * @param {ConfiguracionSistemaFindUniqueArgs} args - Arguments to find a ConfiguracionSistema
     * @example
     * // Get one ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConfiguracionSistemaFindUniqueArgs>(args: SelectSubset<T, ConfiguracionSistemaFindUniqueArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ConfiguracionSistema that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ConfiguracionSistemaFindUniqueOrThrowArgs} args - Arguments to find a ConfiguracionSistema
     * @example
     * // Get one ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConfiguracionSistemaFindUniqueOrThrowArgs>(args: SelectSubset<T, ConfiguracionSistemaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ConfiguracionSistema that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaFindFirstArgs} args - Arguments to find a ConfiguracionSistema
     * @example
     * // Get one ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConfiguracionSistemaFindFirstArgs>(args?: SelectSubset<T, ConfiguracionSistemaFindFirstArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ConfiguracionSistema that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaFindFirstOrThrowArgs} args - Arguments to find a ConfiguracionSistema
     * @example
     * // Get one ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConfiguracionSistemaFindFirstOrThrowArgs>(args?: SelectSubset<T, ConfiguracionSistemaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ConfiguracionSistemas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ConfiguracionSistemas
     * const configuracionSistemas = await prisma.configuracionSistema.findMany()
     * 
     * // Get first 10 ConfiguracionSistemas
     * const configuracionSistemas = await prisma.configuracionSistema.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configuracionSistemaWithIdOnly = await prisma.configuracionSistema.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConfiguracionSistemaFindManyArgs>(args?: SelectSubset<T, ConfiguracionSistemaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ConfiguracionSistema.
     * @param {ConfiguracionSistemaCreateArgs} args - Arguments to create a ConfiguracionSistema.
     * @example
     * // Create one ConfiguracionSistema
     * const ConfiguracionSistema = await prisma.configuracionSistema.create({
     *   data: {
     *     // ... data to create a ConfiguracionSistema
     *   }
     * })
     * 
     */
    create<T extends ConfiguracionSistemaCreateArgs>(args: SelectSubset<T, ConfiguracionSistemaCreateArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ConfiguracionSistemas.
     * @param {ConfiguracionSistemaCreateManyArgs} args - Arguments to create many ConfiguracionSistemas.
     * @example
     * // Create many ConfiguracionSistemas
     * const configuracionSistema = await prisma.configuracionSistema.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConfiguracionSistemaCreateManyArgs>(args?: SelectSubset<T, ConfiguracionSistemaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ConfiguracionSistemas and returns the data saved in the database.
     * @param {ConfiguracionSistemaCreateManyAndReturnArgs} args - Arguments to create many ConfiguracionSistemas.
     * @example
     * // Create many ConfiguracionSistemas
     * const configuracionSistema = await prisma.configuracionSistema.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ConfiguracionSistemas and only return the `id`
     * const configuracionSistemaWithIdOnly = await prisma.configuracionSistema.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConfiguracionSistemaCreateManyAndReturnArgs>(args?: SelectSubset<T, ConfiguracionSistemaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ConfiguracionSistema.
     * @param {ConfiguracionSistemaDeleteArgs} args - Arguments to delete one ConfiguracionSistema.
     * @example
     * // Delete one ConfiguracionSistema
     * const ConfiguracionSistema = await prisma.configuracionSistema.delete({
     *   where: {
     *     // ... filter to delete one ConfiguracionSistema
     *   }
     * })
     * 
     */
    delete<T extends ConfiguracionSistemaDeleteArgs>(args: SelectSubset<T, ConfiguracionSistemaDeleteArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ConfiguracionSistema.
     * @param {ConfiguracionSistemaUpdateArgs} args - Arguments to update one ConfiguracionSistema.
     * @example
     * // Update one ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConfiguracionSistemaUpdateArgs>(args: SelectSubset<T, ConfiguracionSistemaUpdateArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ConfiguracionSistemas.
     * @param {ConfiguracionSistemaDeleteManyArgs} args - Arguments to filter ConfiguracionSistemas to delete.
     * @example
     * // Delete a few ConfiguracionSistemas
     * const { count } = await prisma.configuracionSistema.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConfiguracionSistemaDeleteManyArgs>(args?: SelectSubset<T, ConfiguracionSistemaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConfiguracionSistemas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ConfiguracionSistemas
     * const configuracionSistema = await prisma.configuracionSistema.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConfiguracionSistemaUpdateManyArgs>(args: SelectSubset<T, ConfiguracionSistemaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ConfiguracionSistema.
     * @param {ConfiguracionSistemaUpsertArgs} args - Arguments to update or create a ConfiguracionSistema.
     * @example
     * // Update or create a ConfiguracionSistema
     * const configuracionSistema = await prisma.configuracionSistema.upsert({
     *   create: {
     *     // ... data to create a ConfiguracionSistema
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ConfiguracionSistema we want to update
     *   }
     * })
     */
    upsert<T extends ConfiguracionSistemaUpsertArgs>(args: SelectSubset<T, ConfiguracionSistemaUpsertArgs<ExtArgs>>): Prisma__ConfiguracionSistemaClient<$Result.GetResult<Prisma.$ConfiguracionSistemaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ConfiguracionSistemas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaCountArgs} args - Arguments to filter ConfiguracionSistemas to count.
     * @example
     * // Count the number of ConfiguracionSistemas
     * const count = await prisma.configuracionSistema.count({
     *   where: {
     *     // ... the filter for the ConfiguracionSistemas we want to count
     *   }
     * })
    **/
    count<T extends ConfiguracionSistemaCountArgs>(
      args?: Subset<T, ConfiguracionSistemaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfiguracionSistemaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ConfiguracionSistema.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfiguracionSistemaAggregateArgs>(args: Subset<T, ConfiguracionSistemaAggregateArgs>): Prisma.PrismaPromise<GetConfiguracionSistemaAggregateType<T>>

    /**
     * Group by ConfiguracionSistema.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionSistemaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConfiguracionSistemaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConfiguracionSistemaGroupByArgs['orderBy'] }
        : { orderBy?: ConfiguracionSistemaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConfiguracionSistemaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfiguracionSistemaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ConfiguracionSistema model
   */
  readonly fields: ConfiguracionSistemaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ConfiguracionSistema.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConfiguracionSistemaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ConfiguracionSistema model
   */ 
  interface ConfiguracionSistemaFieldRefs {
    readonly id: FieldRef<"ConfiguracionSistema", 'Int'>
    readonly clave: FieldRef<"ConfiguracionSistema", 'String'>
    readonly valor: FieldRef<"ConfiguracionSistema", 'Json'>
    readonly descripcion: FieldRef<"ConfiguracionSistema", 'String'>
    readonly fechaCreacion: FieldRef<"ConfiguracionSistema", 'DateTime'>
    readonly fechaActualizacion: FieldRef<"ConfiguracionSistema", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ConfiguracionSistema findUnique
   */
  export type ConfiguracionSistemaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Filter, which ConfiguracionSistema to fetch.
     */
    where: ConfiguracionSistemaWhereUniqueInput
  }

  /**
   * ConfiguracionSistema findUniqueOrThrow
   */
  export type ConfiguracionSistemaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Filter, which ConfiguracionSistema to fetch.
     */
    where: ConfiguracionSistemaWhereUniqueInput
  }

  /**
   * ConfiguracionSistema findFirst
   */
  export type ConfiguracionSistemaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Filter, which ConfiguracionSistema to fetch.
     */
    where?: ConfiguracionSistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracionSistemas to fetch.
     */
    orderBy?: ConfiguracionSistemaOrderByWithRelationInput | ConfiguracionSistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfiguracionSistemas.
     */
    cursor?: ConfiguracionSistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracionSistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracionSistemas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfiguracionSistemas.
     */
    distinct?: ConfiguracionSistemaScalarFieldEnum | ConfiguracionSistemaScalarFieldEnum[]
  }

  /**
   * ConfiguracionSistema findFirstOrThrow
   */
  export type ConfiguracionSistemaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Filter, which ConfiguracionSistema to fetch.
     */
    where?: ConfiguracionSistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracionSistemas to fetch.
     */
    orderBy?: ConfiguracionSistemaOrderByWithRelationInput | ConfiguracionSistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfiguracionSistemas.
     */
    cursor?: ConfiguracionSistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracionSistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracionSistemas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfiguracionSistemas.
     */
    distinct?: ConfiguracionSistemaScalarFieldEnum | ConfiguracionSistemaScalarFieldEnum[]
  }

  /**
   * ConfiguracionSistema findMany
   */
  export type ConfiguracionSistemaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Filter, which ConfiguracionSistemas to fetch.
     */
    where?: ConfiguracionSistemaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracionSistemas to fetch.
     */
    orderBy?: ConfiguracionSistemaOrderByWithRelationInput | ConfiguracionSistemaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ConfiguracionSistemas.
     */
    cursor?: ConfiguracionSistemaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracionSistemas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracionSistemas.
     */
    skip?: number
    distinct?: ConfiguracionSistemaScalarFieldEnum | ConfiguracionSistemaScalarFieldEnum[]
  }

  /**
   * ConfiguracionSistema create
   */
  export type ConfiguracionSistemaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * The data needed to create a ConfiguracionSistema.
     */
    data: XOR<ConfiguracionSistemaCreateInput, ConfiguracionSistemaUncheckedCreateInput>
  }

  /**
   * ConfiguracionSistema createMany
   */
  export type ConfiguracionSistemaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ConfiguracionSistemas.
     */
    data: ConfiguracionSistemaCreateManyInput | ConfiguracionSistemaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConfiguracionSistema createManyAndReturn
   */
  export type ConfiguracionSistemaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ConfiguracionSistemas.
     */
    data: ConfiguracionSistemaCreateManyInput | ConfiguracionSistemaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConfiguracionSistema update
   */
  export type ConfiguracionSistemaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * The data needed to update a ConfiguracionSistema.
     */
    data: XOR<ConfiguracionSistemaUpdateInput, ConfiguracionSistemaUncheckedUpdateInput>
    /**
     * Choose, which ConfiguracionSistema to update.
     */
    where: ConfiguracionSistemaWhereUniqueInput
  }

  /**
   * ConfiguracionSistema updateMany
   */
  export type ConfiguracionSistemaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ConfiguracionSistemas.
     */
    data: XOR<ConfiguracionSistemaUpdateManyMutationInput, ConfiguracionSistemaUncheckedUpdateManyInput>
    /**
     * Filter which ConfiguracionSistemas to update
     */
    where?: ConfiguracionSistemaWhereInput
  }

  /**
   * ConfiguracionSistema upsert
   */
  export type ConfiguracionSistemaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * The filter to search for the ConfiguracionSistema to update in case it exists.
     */
    where: ConfiguracionSistemaWhereUniqueInput
    /**
     * In case the ConfiguracionSistema found by the `where` argument doesn't exist, create a new ConfiguracionSistema with this data.
     */
    create: XOR<ConfiguracionSistemaCreateInput, ConfiguracionSistemaUncheckedCreateInput>
    /**
     * In case the ConfiguracionSistema was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConfiguracionSistemaUpdateInput, ConfiguracionSistemaUncheckedUpdateInput>
  }

  /**
   * ConfiguracionSistema delete
   */
  export type ConfiguracionSistemaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
    /**
     * Filter which ConfiguracionSistema to delete.
     */
    where: ConfiguracionSistemaWhereUniqueInput
  }

  /**
   * ConfiguracionSistema deleteMany
   */
  export type ConfiguracionSistemaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfiguracionSistemas to delete
     */
    where?: ConfiguracionSistemaWhereInput
  }

  /**
   * ConfiguracionSistema without action
   */
  export type ConfiguracionSistemaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracionSistema
     */
    select?: ConfiguracionSistemaSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    nombre: 'nombre',
    apellido: 'apellido',
    rol: 'rol',
    activo: 'activo',
    fechaCreacion: 'fechaCreacion',
    fechaActualizacion: 'fechaActualizacion'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const CampanaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    estado: 'estado',
    fechaInicio: 'fechaInicio',
    fechaFin: 'fechaFin',
    campos: 'campos',
    prompt: 'prompt',
    criteriosEvaluacion: 'criteriosEvaluacion',
    creadorId: 'creadorId',
    fechaCreacion: 'fechaCreacion',
    fechaActualizacion: 'fechaActualizacion'
  };

  export type CampanaScalarFieldEnum = (typeof CampanaScalarFieldEnum)[keyof typeof CampanaScalarFieldEnum]


  export const ClienteSimuladoScalarFieldEnum: {
    id: 'id',
    campanaId: 'campanaId',
    datos: 'datos',
    estado: 'estado',
    asignadoA: 'asignadoA',
    fechaAsignacion: 'fechaAsignacion',
    fechaCreacion: 'fechaCreacion',
    fechaActualizacion: 'fechaActualizacion'
  };

  export type ClienteSimuladoScalarFieldEnum = (typeof ClienteSimuladoScalarFieldEnum)[keyof typeof ClienteSimuladoScalarFieldEnum]


  export const SimulacionScalarFieldEnum: {
    id: 'id',
    clienteId: 'clienteId',
    usuarioId: 'usuarioId',
    sessionId: 'sessionId',
    estado: 'estado',
    fechaInicio: 'fechaInicio',
    fechaFin: 'fechaFin',
    duracion: 'duracion',
    transcripcion: 'transcripcion',
    calificacion: 'calificacion',
    feedback: 'feedback',
    evaluacion: 'evaluacion',
    tipificacion: 'tipificacion',
    fechaCreacion: 'fechaCreacion',
    fechaActualizacion: 'fechaActualizacion'
  };

  export type SimulacionScalarFieldEnum = (typeof SimulacionScalarFieldEnum)[keyof typeof SimulacionScalarFieldEnum]


  export const ConfiguracionSistemaScalarFieldEnum: {
    id: 'id',
    clave: 'clave',
    valor: 'valor',
    descripcion: 'descripcion',
    fechaCreacion: 'fechaCreacion',
    fechaActualizacion: 'fechaActualizacion'
  };

  export type ConfiguracionSistemaScalarFieldEnum = (typeof ConfiguracionSistemaScalarFieldEnum)[keyof typeof ConfiguracionSistemaScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: IntFilter<"Usuario"> | number
    email?: StringFilter<"Usuario"> | string
    password?: StringNullableFilter<"Usuario"> | string | null
    nombre?: StringFilter<"Usuario"> | string
    apellido?: StringNullableFilter<"Usuario"> | string | null
    rol?: StringFilter<"Usuario"> | string
    activo?: BoolFilter<"Usuario"> | boolean
    fechaCreacion?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    fechaActualizacion?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    simulaciones?: SimulacionListRelationFilter
    campanasCreadas?: CampanaListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    nombre?: SortOrder
    apellido?: SortOrderInput | SortOrder
    rol?: SortOrder
    activo?: SortOrder
    fechaCreacion?: SortOrderInput | SortOrder
    fechaActualizacion?: SortOrderInput | SortOrder
    simulaciones?: SimulacionOrderByRelationAggregateInput
    campanasCreadas?: CampanaOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    password?: StringNullableFilter<"Usuario"> | string | null
    nombre?: StringFilter<"Usuario"> | string
    apellido?: StringNullableFilter<"Usuario"> | string | null
    rol?: StringFilter<"Usuario"> | string
    activo?: BoolFilter<"Usuario"> | boolean
    fechaCreacion?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    fechaActualizacion?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    simulaciones?: SimulacionListRelationFilter
    campanasCreadas?: CampanaListRelationFilter
  }, "id" | "email">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    nombre?: SortOrder
    apellido?: SortOrderInput | SortOrder
    rol?: SortOrder
    activo?: SortOrder
    fechaCreacion?: SortOrderInput | SortOrder
    fechaActualizacion?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Usuario"> | number
    email?: StringWithAggregatesFilter<"Usuario"> | string
    password?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    nombre?: StringWithAggregatesFilter<"Usuario"> | string
    apellido?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    rol?: StringWithAggregatesFilter<"Usuario"> | string
    activo?: BoolWithAggregatesFilter<"Usuario"> | boolean
    fechaCreacion?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
    fechaActualizacion?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
  }

  export type CampanaWhereInput = {
    AND?: CampanaWhereInput | CampanaWhereInput[]
    OR?: CampanaWhereInput[]
    NOT?: CampanaWhereInput | CampanaWhereInput[]
    id?: IntFilter<"Campana"> | number
    nombre?: StringFilter<"Campana"> | string
    descripcion?: StringNullableFilter<"Campana"> | string | null
    estado?: StringFilter<"Campana"> | string
    fechaInicio?: DateTimeFilter<"Campana"> | Date | string
    fechaFin?: DateTimeNullableFilter<"Campana"> | Date | string | null
    campos?: JsonFilter<"Campana">
    prompt?: StringFilter<"Campana"> | string
    criteriosEvaluacion?: JsonNullableFilter<"Campana">
    creadorId?: IntFilter<"Campana"> | number
    fechaCreacion?: DateTimeFilter<"Campana"> | Date | string
    fechaActualizacion?: DateTimeFilter<"Campana"> | Date | string
    creador?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    clientes?: ClienteSimuladoListRelationFilter
  }

  export type CampanaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    estado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrderInput | SortOrder
    campos?: SortOrder
    prompt?: SortOrder
    criteriosEvaluacion?: SortOrderInput | SortOrder
    creadorId?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
    creador?: UsuarioOrderByWithRelationInput
    clientes?: ClienteSimuladoOrderByRelationAggregateInput
  }

  export type CampanaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CampanaWhereInput | CampanaWhereInput[]
    OR?: CampanaWhereInput[]
    NOT?: CampanaWhereInput | CampanaWhereInput[]
    nombre?: StringFilter<"Campana"> | string
    descripcion?: StringNullableFilter<"Campana"> | string | null
    estado?: StringFilter<"Campana"> | string
    fechaInicio?: DateTimeFilter<"Campana"> | Date | string
    fechaFin?: DateTimeNullableFilter<"Campana"> | Date | string | null
    campos?: JsonFilter<"Campana">
    prompt?: StringFilter<"Campana"> | string
    criteriosEvaluacion?: JsonNullableFilter<"Campana">
    creadorId?: IntFilter<"Campana"> | number
    fechaCreacion?: DateTimeFilter<"Campana"> | Date | string
    fechaActualizacion?: DateTimeFilter<"Campana"> | Date | string
    creador?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    clientes?: ClienteSimuladoListRelationFilter
  }, "id">

  export type CampanaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    estado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrderInput | SortOrder
    campos?: SortOrder
    prompt?: SortOrder
    criteriosEvaluacion?: SortOrderInput | SortOrder
    creadorId?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
    _count?: CampanaCountOrderByAggregateInput
    _avg?: CampanaAvgOrderByAggregateInput
    _max?: CampanaMaxOrderByAggregateInput
    _min?: CampanaMinOrderByAggregateInput
    _sum?: CampanaSumOrderByAggregateInput
  }

  export type CampanaScalarWhereWithAggregatesInput = {
    AND?: CampanaScalarWhereWithAggregatesInput | CampanaScalarWhereWithAggregatesInput[]
    OR?: CampanaScalarWhereWithAggregatesInput[]
    NOT?: CampanaScalarWhereWithAggregatesInput | CampanaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Campana"> | number
    nombre?: StringWithAggregatesFilter<"Campana"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Campana"> | string | null
    estado?: StringWithAggregatesFilter<"Campana"> | string
    fechaInicio?: DateTimeWithAggregatesFilter<"Campana"> | Date | string
    fechaFin?: DateTimeNullableWithAggregatesFilter<"Campana"> | Date | string | null
    campos?: JsonWithAggregatesFilter<"Campana">
    prompt?: StringWithAggregatesFilter<"Campana"> | string
    criteriosEvaluacion?: JsonNullableWithAggregatesFilter<"Campana">
    creadorId?: IntWithAggregatesFilter<"Campana"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"Campana"> | Date | string
    fechaActualizacion?: DateTimeWithAggregatesFilter<"Campana"> | Date | string
  }

  export type ClienteSimuladoWhereInput = {
    AND?: ClienteSimuladoWhereInput | ClienteSimuladoWhereInput[]
    OR?: ClienteSimuladoWhereInput[]
    NOT?: ClienteSimuladoWhereInput | ClienteSimuladoWhereInput[]
    id?: IntFilter<"ClienteSimulado"> | number
    campanaId?: IntNullableFilter<"ClienteSimulado"> | number | null
    datos?: JsonNullableFilter<"ClienteSimulado">
    estado?: StringFilter<"ClienteSimulado"> | string
    asignadoA?: IntNullableFilter<"ClienteSimulado"> | number | null
    fechaAsignacion?: DateTimeNullableFilter<"ClienteSimulado"> | Date | string | null
    fechaCreacion?: DateTimeNullableFilter<"ClienteSimulado"> | Date | string | null
    fechaActualizacion?: DateTimeNullableFilter<"ClienteSimulado"> | Date | string | null
    campana?: XOR<CampanaNullableRelationFilter, CampanaWhereInput> | null
    simulaciones?: SimulacionListRelationFilter
  }

  export type ClienteSimuladoOrderByWithRelationInput = {
    id?: SortOrder
    campanaId?: SortOrderInput | SortOrder
    datos?: SortOrderInput | SortOrder
    estado?: SortOrder
    asignadoA?: SortOrderInput | SortOrder
    fechaAsignacion?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrderInput | SortOrder
    fechaActualizacion?: SortOrderInput | SortOrder
    campana?: CampanaOrderByWithRelationInput
    simulaciones?: SimulacionOrderByRelationAggregateInput
  }

  export type ClienteSimuladoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ClienteSimuladoWhereInput | ClienteSimuladoWhereInput[]
    OR?: ClienteSimuladoWhereInput[]
    NOT?: ClienteSimuladoWhereInput | ClienteSimuladoWhereInput[]
    campanaId?: IntNullableFilter<"ClienteSimulado"> | number | null
    datos?: JsonNullableFilter<"ClienteSimulado">
    estado?: StringFilter<"ClienteSimulado"> | string
    asignadoA?: IntNullableFilter<"ClienteSimulado"> | number | null
    fechaAsignacion?: DateTimeNullableFilter<"ClienteSimulado"> | Date | string | null
    fechaCreacion?: DateTimeNullableFilter<"ClienteSimulado"> | Date | string | null
    fechaActualizacion?: DateTimeNullableFilter<"ClienteSimulado"> | Date | string | null
    campana?: XOR<CampanaNullableRelationFilter, CampanaWhereInput> | null
    simulaciones?: SimulacionListRelationFilter
  }, "id">

  export type ClienteSimuladoOrderByWithAggregationInput = {
    id?: SortOrder
    campanaId?: SortOrderInput | SortOrder
    datos?: SortOrderInput | SortOrder
    estado?: SortOrder
    asignadoA?: SortOrderInput | SortOrder
    fechaAsignacion?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrderInput | SortOrder
    fechaActualizacion?: SortOrderInput | SortOrder
    _count?: ClienteSimuladoCountOrderByAggregateInput
    _avg?: ClienteSimuladoAvgOrderByAggregateInput
    _max?: ClienteSimuladoMaxOrderByAggregateInput
    _min?: ClienteSimuladoMinOrderByAggregateInput
    _sum?: ClienteSimuladoSumOrderByAggregateInput
  }

  export type ClienteSimuladoScalarWhereWithAggregatesInput = {
    AND?: ClienteSimuladoScalarWhereWithAggregatesInput | ClienteSimuladoScalarWhereWithAggregatesInput[]
    OR?: ClienteSimuladoScalarWhereWithAggregatesInput[]
    NOT?: ClienteSimuladoScalarWhereWithAggregatesInput | ClienteSimuladoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ClienteSimulado"> | number
    campanaId?: IntNullableWithAggregatesFilter<"ClienteSimulado"> | number | null
    datos?: JsonNullableWithAggregatesFilter<"ClienteSimulado">
    estado?: StringWithAggregatesFilter<"ClienteSimulado"> | string
    asignadoA?: IntNullableWithAggregatesFilter<"ClienteSimulado"> | number | null
    fechaAsignacion?: DateTimeNullableWithAggregatesFilter<"ClienteSimulado"> | Date | string | null
    fechaCreacion?: DateTimeNullableWithAggregatesFilter<"ClienteSimulado"> | Date | string | null
    fechaActualizacion?: DateTimeNullableWithAggregatesFilter<"ClienteSimulado"> | Date | string | null
  }

  export type SimulacionWhereInput = {
    AND?: SimulacionWhereInput | SimulacionWhereInput[]
    OR?: SimulacionWhereInput[]
    NOT?: SimulacionWhereInput | SimulacionWhereInput[]
    id?: IntFilter<"Simulacion"> | number
    clienteId?: IntFilter<"Simulacion"> | number
    usuarioId?: IntFilter<"Simulacion"> | number
    sessionId?: StringFilter<"Simulacion"> | string
    estado?: StringFilter<"Simulacion"> | string
    fechaInicio?: DateTimeFilter<"Simulacion"> | Date | string
    fechaFin?: DateTimeNullableFilter<"Simulacion"> | Date | string | null
    duracion?: IntNullableFilter<"Simulacion"> | number | null
    transcripcion?: JsonFilter<"Simulacion">
    calificacion?: FloatNullableFilter<"Simulacion"> | number | null
    feedback?: StringNullableFilter<"Simulacion"> | string | null
    evaluacion?: JsonNullableFilter<"Simulacion">
    tipificacion?: JsonNullableFilter<"Simulacion">
    fechaCreacion?: DateTimeFilter<"Simulacion"> | Date | string
    fechaActualizacion?: DateTimeFilter<"Simulacion"> | Date | string
    cliente?: XOR<ClienteSimuladoRelationFilter, ClienteSimuladoWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type SimulacionOrderByWithRelationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sessionId?: SortOrder
    estado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrderInput | SortOrder
    duracion?: SortOrderInput | SortOrder
    transcripcion?: SortOrder
    calificacion?: SortOrderInput | SortOrder
    feedback?: SortOrderInput | SortOrder
    evaluacion?: SortOrderInput | SortOrder
    tipificacion?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
    cliente?: ClienteSimuladoOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type SimulacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sessionId?: string
    AND?: SimulacionWhereInput | SimulacionWhereInput[]
    OR?: SimulacionWhereInput[]
    NOT?: SimulacionWhereInput | SimulacionWhereInput[]
    clienteId?: IntFilter<"Simulacion"> | number
    usuarioId?: IntFilter<"Simulacion"> | number
    estado?: StringFilter<"Simulacion"> | string
    fechaInicio?: DateTimeFilter<"Simulacion"> | Date | string
    fechaFin?: DateTimeNullableFilter<"Simulacion"> | Date | string | null
    duracion?: IntNullableFilter<"Simulacion"> | number | null
    transcripcion?: JsonFilter<"Simulacion">
    calificacion?: FloatNullableFilter<"Simulacion"> | number | null
    feedback?: StringNullableFilter<"Simulacion"> | string | null
    evaluacion?: JsonNullableFilter<"Simulacion">
    tipificacion?: JsonNullableFilter<"Simulacion">
    fechaCreacion?: DateTimeFilter<"Simulacion"> | Date | string
    fechaActualizacion?: DateTimeFilter<"Simulacion"> | Date | string
    cliente?: XOR<ClienteSimuladoRelationFilter, ClienteSimuladoWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id" | "sessionId">

  export type SimulacionOrderByWithAggregationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sessionId?: SortOrder
    estado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrderInput | SortOrder
    duracion?: SortOrderInput | SortOrder
    transcripcion?: SortOrder
    calificacion?: SortOrderInput | SortOrder
    feedback?: SortOrderInput | SortOrder
    evaluacion?: SortOrderInput | SortOrder
    tipificacion?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
    _count?: SimulacionCountOrderByAggregateInput
    _avg?: SimulacionAvgOrderByAggregateInput
    _max?: SimulacionMaxOrderByAggregateInput
    _min?: SimulacionMinOrderByAggregateInput
    _sum?: SimulacionSumOrderByAggregateInput
  }

  export type SimulacionScalarWhereWithAggregatesInput = {
    AND?: SimulacionScalarWhereWithAggregatesInput | SimulacionScalarWhereWithAggregatesInput[]
    OR?: SimulacionScalarWhereWithAggregatesInput[]
    NOT?: SimulacionScalarWhereWithAggregatesInput | SimulacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Simulacion"> | number
    clienteId?: IntWithAggregatesFilter<"Simulacion"> | number
    usuarioId?: IntWithAggregatesFilter<"Simulacion"> | number
    sessionId?: StringWithAggregatesFilter<"Simulacion"> | string
    estado?: StringWithAggregatesFilter<"Simulacion"> | string
    fechaInicio?: DateTimeWithAggregatesFilter<"Simulacion"> | Date | string
    fechaFin?: DateTimeNullableWithAggregatesFilter<"Simulacion"> | Date | string | null
    duracion?: IntNullableWithAggregatesFilter<"Simulacion"> | number | null
    transcripcion?: JsonWithAggregatesFilter<"Simulacion">
    calificacion?: FloatNullableWithAggregatesFilter<"Simulacion"> | number | null
    feedback?: StringNullableWithAggregatesFilter<"Simulacion"> | string | null
    evaluacion?: JsonNullableWithAggregatesFilter<"Simulacion">
    tipificacion?: JsonNullableWithAggregatesFilter<"Simulacion">
    fechaCreacion?: DateTimeWithAggregatesFilter<"Simulacion"> | Date | string
    fechaActualizacion?: DateTimeWithAggregatesFilter<"Simulacion"> | Date | string
  }

  export type ConfiguracionSistemaWhereInput = {
    AND?: ConfiguracionSistemaWhereInput | ConfiguracionSistemaWhereInput[]
    OR?: ConfiguracionSistemaWhereInput[]
    NOT?: ConfiguracionSistemaWhereInput | ConfiguracionSistemaWhereInput[]
    id?: IntFilter<"ConfiguracionSistema"> | number
    clave?: StringFilter<"ConfiguracionSistema"> | string
    valor?: JsonFilter<"ConfiguracionSistema">
    descripcion?: StringNullableFilter<"ConfiguracionSistema"> | string | null
    fechaCreacion?: DateTimeFilter<"ConfiguracionSistema"> | Date | string
    fechaActualizacion?: DateTimeFilter<"ConfiguracionSistema"> | Date | string
  }

  export type ConfiguracionSistemaOrderByWithRelationInput = {
    id?: SortOrder
    clave?: SortOrder
    valor?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type ConfiguracionSistemaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    clave?: string
    AND?: ConfiguracionSistemaWhereInput | ConfiguracionSistemaWhereInput[]
    OR?: ConfiguracionSistemaWhereInput[]
    NOT?: ConfiguracionSistemaWhereInput | ConfiguracionSistemaWhereInput[]
    valor?: JsonFilter<"ConfiguracionSistema">
    descripcion?: StringNullableFilter<"ConfiguracionSistema"> | string | null
    fechaCreacion?: DateTimeFilter<"ConfiguracionSistema"> | Date | string
    fechaActualizacion?: DateTimeFilter<"ConfiguracionSistema"> | Date | string
  }, "id" | "clave">

  export type ConfiguracionSistemaOrderByWithAggregationInput = {
    id?: SortOrder
    clave?: SortOrder
    valor?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
    _count?: ConfiguracionSistemaCountOrderByAggregateInput
    _avg?: ConfiguracionSistemaAvgOrderByAggregateInput
    _max?: ConfiguracionSistemaMaxOrderByAggregateInput
    _min?: ConfiguracionSistemaMinOrderByAggregateInput
    _sum?: ConfiguracionSistemaSumOrderByAggregateInput
  }

  export type ConfiguracionSistemaScalarWhereWithAggregatesInput = {
    AND?: ConfiguracionSistemaScalarWhereWithAggregatesInput | ConfiguracionSistemaScalarWhereWithAggregatesInput[]
    OR?: ConfiguracionSistemaScalarWhereWithAggregatesInput[]
    NOT?: ConfiguracionSistemaScalarWhereWithAggregatesInput | ConfiguracionSistemaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ConfiguracionSistema"> | number
    clave?: StringWithAggregatesFilter<"ConfiguracionSistema"> | string
    valor?: JsonWithAggregatesFilter<"ConfiguracionSistema">
    descripcion?: StringNullableWithAggregatesFilter<"ConfiguracionSistema"> | string | null
    fechaCreacion?: DateTimeWithAggregatesFilter<"ConfiguracionSistema"> | Date | string
    fechaActualizacion?: DateTimeWithAggregatesFilter<"ConfiguracionSistema"> | Date | string
  }

  export type UsuarioCreateInput = {
    email: string
    password?: string | null
    nombre: string
    apellido?: string | null
    rol: string
    activo?: boolean
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
    simulaciones?: SimulacionCreateNestedManyWithoutUsuarioInput
    campanasCreadas?: CampanaCreateNestedManyWithoutCreadorInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: number
    email: string
    password?: string | null
    nombre: string
    apellido?: string | null
    rol: string
    activo?: boolean
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
    simulaciones?: SimulacionUncheckedCreateNestedManyWithoutUsuarioInput
    campanasCreadas?: CampanaUncheckedCreateNestedManyWithoutCreadorInput
  }

  export type UsuarioUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    simulaciones?: SimulacionUpdateManyWithoutUsuarioNestedInput
    campanasCreadas?: CampanaUpdateManyWithoutCreadorNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    simulaciones?: SimulacionUncheckedUpdateManyWithoutUsuarioNestedInput
    campanasCreadas?: CampanaUncheckedUpdateManyWithoutCreadorNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: number
    email: string
    password?: string | null
    nombre: string
    apellido?: string | null
    rol: string
    activo?: boolean
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
  }

  export type UsuarioUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CampanaCreateInput = {
    nombre: string
    descripcion?: string | null
    estado?: string
    fechaInicio: Date | string
    fechaFin?: Date | string | null
    campos: JsonNullValueInput | InputJsonValue
    prompt: string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    creador: UsuarioCreateNestedOneWithoutCampanasCreadasInput
    clientes?: ClienteSimuladoCreateNestedManyWithoutCampanaInput
  }

  export type CampanaUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    estado?: string
    fechaInicio: Date | string
    fechaFin?: Date | string | null
    campos: JsonNullValueInput | InputJsonValue
    prompt: string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    creadorId: number
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    clientes?: ClienteSimuladoUncheckedCreateNestedManyWithoutCampanaInput
  }

  export type CampanaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campos?: JsonNullValueInput | InputJsonValue
    prompt?: StringFieldUpdateOperationsInput | string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    creador?: UsuarioUpdateOneRequiredWithoutCampanasCreadasNestedInput
    clientes?: ClienteSimuladoUpdateManyWithoutCampanaNestedInput
  }

  export type CampanaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campos?: JsonNullValueInput | InputJsonValue
    prompt?: StringFieldUpdateOperationsInput | string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    creadorId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    clientes?: ClienteSimuladoUncheckedUpdateManyWithoutCampanaNestedInput
  }

  export type CampanaCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    estado?: string
    fechaInicio: Date | string
    fechaFin?: Date | string | null
    campos: JsonNullValueInput | InputJsonValue
    prompt: string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    creadorId: number
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type CampanaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campos?: JsonNullValueInput | InputJsonValue
    prompt?: StringFieldUpdateOperationsInput | string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampanaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campos?: JsonNullValueInput | InputJsonValue
    prompt?: StringFieldUpdateOperationsInput | string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    creadorId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClienteSimuladoCreateInput = {
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: string
    asignadoA?: number | null
    fechaAsignacion?: Date | string | null
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
    campana?: CampanaCreateNestedOneWithoutClientesInput
    simulaciones?: SimulacionCreateNestedManyWithoutClienteInput
  }

  export type ClienteSimuladoUncheckedCreateInput = {
    id?: number
    campanaId?: number | null
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: string
    asignadoA?: number | null
    fechaAsignacion?: Date | string | null
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
    simulaciones?: SimulacionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteSimuladoUpdateInput = {
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: StringFieldUpdateOperationsInput | string
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAsignacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campana?: CampanaUpdateOneWithoutClientesNestedInput
    simulaciones?: SimulacionUpdateManyWithoutClienteNestedInput
  }

  export type ClienteSimuladoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    campanaId?: NullableIntFieldUpdateOperationsInput | number | null
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: StringFieldUpdateOperationsInput | string
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAsignacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    simulaciones?: SimulacionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteSimuladoCreateManyInput = {
    id?: number
    campanaId?: number | null
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: string
    asignadoA?: number | null
    fechaAsignacion?: Date | string | null
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
  }

  export type ClienteSimuladoUpdateManyMutationInput = {
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: StringFieldUpdateOperationsInput | string
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAsignacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClienteSimuladoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    campanaId?: NullableIntFieldUpdateOperationsInput | number | null
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: StringFieldUpdateOperationsInput | string
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAsignacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SimulacionCreateInput = {
    sessionId: string
    estado?: string
    fechaInicio?: Date | string
    fechaFin?: Date | string | null
    duracion?: number | null
    transcripcion: JsonNullValueInput | InputJsonValue
    calificacion?: number | null
    feedback?: string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    cliente: ClienteSimuladoCreateNestedOneWithoutSimulacionesInput
    usuario: UsuarioCreateNestedOneWithoutSimulacionesInput
  }

  export type SimulacionUncheckedCreateInput = {
    id?: number
    clienteId: number
    usuarioId: number
    sessionId: string
    estado?: string
    fechaInicio?: Date | string
    fechaFin?: Date | string | null
    duracion?: number | null
    transcripcion: JsonNullValueInput | InputJsonValue
    calificacion?: number | null
    feedback?: string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type SimulacionUpdateInput = {
    sessionId?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    transcripcion?: JsonNullValueInput | InputJsonValue
    calificacion?: NullableFloatFieldUpdateOperationsInput | number | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteSimuladoUpdateOneRequiredWithoutSimulacionesNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutSimulacionesNestedInput
  }

  export type SimulacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sessionId?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    transcripcion?: JsonNullValueInput | InputJsonValue
    calificacion?: NullableFloatFieldUpdateOperationsInput | number | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SimulacionCreateManyInput = {
    id?: number
    clienteId: number
    usuarioId: number
    sessionId: string
    estado?: string
    fechaInicio?: Date | string
    fechaFin?: Date | string | null
    duracion?: number | null
    transcripcion: JsonNullValueInput | InputJsonValue
    calificacion?: number | null
    feedback?: string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type SimulacionUpdateManyMutationInput = {
    sessionId?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    transcripcion?: JsonNullValueInput | InputJsonValue
    calificacion?: NullableFloatFieldUpdateOperationsInput | number | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SimulacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sessionId?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    transcripcion?: JsonNullValueInput | InputJsonValue
    calificacion?: NullableFloatFieldUpdateOperationsInput | number | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracionSistemaCreateInput = {
    clave: string
    valor: JsonNullValueInput | InputJsonValue
    descripcion?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type ConfiguracionSistemaUncheckedCreateInput = {
    id?: number
    clave: string
    valor: JsonNullValueInput | InputJsonValue
    descripcion?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type ConfiguracionSistemaUpdateInput = {
    clave?: StringFieldUpdateOperationsInput | string
    valor?: JsonNullValueInput | InputJsonValue
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracionSistemaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clave?: StringFieldUpdateOperationsInput | string
    valor?: JsonNullValueInput | InputJsonValue
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracionSistemaCreateManyInput = {
    id?: number
    clave: string
    valor: JsonNullValueInput | InputJsonValue
    descripcion?: string | null
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type ConfiguracionSistemaUpdateManyMutationInput = {
    clave?: StringFieldUpdateOperationsInput | string
    valor?: JsonNullValueInput | InputJsonValue
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracionSistemaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clave?: StringFieldUpdateOperationsInput | string
    valor?: JsonNullValueInput | InputJsonValue
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type SimulacionListRelationFilter = {
    every?: SimulacionWhereInput
    some?: SimulacionWhereInput
    none?: SimulacionWhereInput
  }

  export type CampanaListRelationFilter = {
    every?: CampanaWhereInput
    some?: CampanaWhereInput
    none?: CampanaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type SimulacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CampanaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    rol?: SortOrder
    activo?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    rol?: SortOrder
    activo?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    rol?: SortOrder
    activo?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UsuarioRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type ClienteSimuladoListRelationFilter = {
    every?: ClienteSimuladoWhereInput
    some?: ClienteSimuladoWhereInput
    none?: ClienteSimuladoWhereInput
  }

  export type ClienteSimuladoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CampanaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    estado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    campos?: SortOrder
    prompt?: SortOrder
    criteriosEvaluacion?: SortOrder
    creadorId?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type CampanaAvgOrderByAggregateInput = {
    id?: SortOrder
    creadorId?: SortOrder
  }

  export type CampanaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    estado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    prompt?: SortOrder
    creadorId?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type CampanaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    estado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    prompt?: SortOrder
    creadorId?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type CampanaSumOrderByAggregateInput = {
    id?: SortOrder
    creadorId?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type CampanaNullableRelationFilter = {
    is?: CampanaWhereInput | null
    isNot?: CampanaWhereInput | null
  }

  export type ClienteSimuladoCountOrderByAggregateInput = {
    id?: SortOrder
    campanaId?: SortOrder
    datos?: SortOrder
    estado?: SortOrder
    asignadoA?: SortOrder
    fechaAsignacion?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type ClienteSimuladoAvgOrderByAggregateInput = {
    id?: SortOrder
    campanaId?: SortOrder
    asignadoA?: SortOrder
  }

  export type ClienteSimuladoMaxOrderByAggregateInput = {
    id?: SortOrder
    campanaId?: SortOrder
    estado?: SortOrder
    asignadoA?: SortOrder
    fechaAsignacion?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type ClienteSimuladoMinOrderByAggregateInput = {
    id?: SortOrder
    campanaId?: SortOrder
    estado?: SortOrder
    asignadoA?: SortOrder
    fechaAsignacion?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type ClienteSimuladoSumOrderByAggregateInput = {
    id?: SortOrder
    campanaId?: SortOrder
    asignadoA?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type ClienteSimuladoRelationFilter = {
    is?: ClienteSimuladoWhereInput
    isNot?: ClienteSimuladoWhereInput
  }

  export type SimulacionCountOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sessionId?: SortOrder
    estado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    duracion?: SortOrder
    transcripcion?: SortOrder
    calificacion?: SortOrder
    feedback?: SortOrder
    evaluacion?: SortOrder
    tipificacion?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type SimulacionAvgOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    duracion?: SortOrder
    calificacion?: SortOrder
  }

  export type SimulacionMaxOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sessionId?: SortOrder
    estado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    duracion?: SortOrder
    calificacion?: SortOrder
    feedback?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type SimulacionMinOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sessionId?: SortOrder
    estado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    duracion?: SortOrder
    calificacion?: SortOrder
    feedback?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type SimulacionSumOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    duracion?: SortOrder
    calificacion?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type ConfiguracionSistemaCountOrderByAggregateInput = {
    id?: SortOrder
    clave?: SortOrder
    valor?: SortOrder
    descripcion?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type ConfiguracionSistemaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ConfiguracionSistemaMaxOrderByAggregateInput = {
    id?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type ConfiguracionSistemaMinOrderByAggregateInput = {
    id?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrder
    fechaCreacion?: SortOrder
    fechaActualizacion?: SortOrder
  }

  export type ConfiguracionSistemaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SimulacionCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<SimulacionCreateWithoutUsuarioInput, SimulacionUncheckedCreateWithoutUsuarioInput> | SimulacionCreateWithoutUsuarioInput[] | SimulacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: SimulacionCreateOrConnectWithoutUsuarioInput | SimulacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: SimulacionCreateManyUsuarioInputEnvelope
    connect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
  }

  export type CampanaCreateNestedManyWithoutCreadorInput = {
    create?: XOR<CampanaCreateWithoutCreadorInput, CampanaUncheckedCreateWithoutCreadorInput> | CampanaCreateWithoutCreadorInput[] | CampanaUncheckedCreateWithoutCreadorInput[]
    connectOrCreate?: CampanaCreateOrConnectWithoutCreadorInput | CampanaCreateOrConnectWithoutCreadorInput[]
    createMany?: CampanaCreateManyCreadorInputEnvelope
    connect?: CampanaWhereUniqueInput | CampanaWhereUniqueInput[]
  }

  export type SimulacionUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<SimulacionCreateWithoutUsuarioInput, SimulacionUncheckedCreateWithoutUsuarioInput> | SimulacionCreateWithoutUsuarioInput[] | SimulacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: SimulacionCreateOrConnectWithoutUsuarioInput | SimulacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: SimulacionCreateManyUsuarioInputEnvelope
    connect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
  }

  export type CampanaUncheckedCreateNestedManyWithoutCreadorInput = {
    create?: XOR<CampanaCreateWithoutCreadorInput, CampanaUncheckedCreateWithoutCreadorInput> | CampanaCreateWithoutCreadorInput[] | CampanaUncheckedCreateWithoutCreadorInput[]
    connectOrCreate?: CampanaCreateOrConnectWithoutCreadorInput | CampanaCreateOrConnectWithoutCreadorInput[]
    createMany?: CampanaCreateManyCreadorInputEnvelope
    connect?: CampanaWhereUniqueInput | CampanaWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type SimulacionUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<SimulacionCreateWithoutUsuarioInput, SimulacionUncheckedCreateWithoutUsuarioInput> | SimulacionCreateWithoutUsuarioInput[] | SimulacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: SimulacionCreateOrConnectWithoutUsuarioInput | SimulacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: SimulacionUpsertWithWhereUniqueWithoutUsuarioInput | SimulacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: SimulacionCreateManyUsuarioInputEnvelope
    set?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    disconnect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    delete?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    connect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    update?: SimulacionUpdateWithWhereUniqueWithoutUsuarioInput | SimulacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: SimulacionUpdateManyWithWhereWithoutUsuarioInput | SimulacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: SimulacionScalarWhereInput | SimulacionScalarWhereInput[]
  }

  export type CampanaUpdateManyWithoutCreadorNestedInput = {
    create?: XOR<CampanaCreateWithoutCreadorInput, CampanaUncheckedCreateWithoutCreadorInput> | CampanaCreateWithoutCreadorInput[] | CampanaUncheckedCreateWithoutCreadorInput[]
    connectOrCreate?: CampanaCreateOrConnectWithoutCreadorInput | CampanaCreateOrConnectWithoutCreadorInput[]
    upsert?: CampanaUpsertWithWhereUniqueWithoutCreadorInput | CampanaUpsertWithWhereUniqueWithoutCreadorInput[]
    createMany?: CampanaCreateManyCreadorInputEnvelope
    set?: CampanaWhereUniqueInput | CampanaWhereUniqueInput[]
    disconnect?: CampanaWhereUniqueInput | CampanaWhereUniqueInput[]
    delete?: CampanaWhereUniqueInput | CampanaWhereUniqueInput[]
    connect?: CampanaWhereUniqueInput | CampanaWhereUniqueInput[]
    update?: CampanaUpdateWithWhereUniqueWithoutCreadorInput | CampanaUpdateWithWhereUniqueWithoutCreadorInput[]
    updateMany?: CampanaUpdateManyWithWhereWithoutCreadorInput | CampanaUpdateManyWithWhereWithoutCreadorInput[]
    deleteMany?: CampanaScalarWhereInput | CampanaScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type SimulacionUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<SimulacionCreateWithoutUsuarioInput, SimulacionUncheckedCreateWithoutUsuarioInput> | SimulacionCreateWithoutUsuarioInput[] | SimulacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: SimulacionCreateOrConnectWithoutUsuarioInput | SimulacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: SimulacionUpsertWithWhereUniqueWithoutUsuarioInput | SimulacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: SimulacionCreateManyUsuarioInputEnvelope
    set?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    disconnect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    delete?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    connect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    update?: SimulacionUpdateWithWhereUniqueWithoutUsuarioInput | SimulacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: SimulacionUpdateManyWithWhereWithoutUsuarioInput | SimulacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: SimulacionScalarWhereInput | SimulacionScalarWhereInput[]
  }

  export type CampanaUncheckedUpdateManyWithoutCreadorNestedInput = {
    create?: XOR<CampanaCreateWithoutCreadorInput, CampanaUncheckedCreateWithoutCreadorInput> | CampanaCreateWithoutCreadorInput[] | CampanaUncheckedCreateWithoutCreadorInput[]
    connectOrCreate?: CampanaCreateOrConnectWithoutCreadorInput | CampanaCreateOrConnectWithoutCreadorInput[]
    upsert?: CampanaUpsertWithWhereUniqueWithoutCreadorInput | CampanaUpsertWithWhereUniqueWithoutCreadorInput[]
    createMany?: CampanaCreateManyCreadorInputEnvelope
    set?: CampanaWhereUniqueInput | CampanaWhereUniqueInput[]
    disconnect?: CampanaWhereUniqueInput | CampanaWhereUniqueInput[]
    delete?: CampanaWhereUniqueInput | CampanaWhereUniqueInput[]
    connect?: CampanaWhereUniqueInput | CampanaWhereUniqueInput[]
    update?: CampanaUpdateWithWhereUniqueWithoutCreadorInput | CampanaUpdateWithWhereUniqueWithoutCreadorInput[]
    updateMany?: CampanaUpdateManyWithWhereWithoutCreadorInput | CampanaUpdateManyWithWhereWithoutCreadorInput[]
    deleteMany?: CampanaScalarWhereInput | CampanaScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutCampanasCreadasInput = {
    create?: XOR<UsuarioCreateWithoutCampanasCreadasInput, UsuarioUncheckedCreateWithoutCampanasCreadasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCampanasCreadasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ClienteSimuladoCreateNestedManyWithoutCampanaInput = {
    create?: XOR<ClienteSimuladoCreateWithoutCampanaInput, ClienteSimuladoUncheckedCreateWithoutCampanaInput> | ClienteSimuladoCreateWithoutCampanaInput[] | ClienteSimuladoUncheckedCreateWithoutCampanaInput[]
    connectOrCreate?: ClienteSimuladoCreateOrConnectWithoutCampanaInput | ClienteSimuladoCreateOrConnectWithoutCampanaInput[]
    createMany?: ClienteSimuladoCreateManyCampanaInputEnvelope
    connect?: ClienteSimuladoWhereUniqueInput | ClienteSimuladoWhereUniqueInput[]
  }

  export type ClienteSimuladoUncheckedCreateNestedManyWithoutCampanaInput = {
    create?: XOR<ClienteSimuladoCreateWithoutCampanaInput, ClienteSimuladoUncheckedCreateWithoutCampanaInput> | ClienteSimuladoCreateWithoutCampanaInput[] | ClienteSimuladoUncheckedCreateWithoutCampanaInput[]
    connectOrCreate?: ClienteSimuladoCreateOrConnectWithoutCampanaInput | ClienteSimuladoCreateOrConnectWithoutCampanaInput[]
    createMany?: ClienteSimuladoCreateManyCampanaInputEnvelope
    connect?: ClienteSimuladoWhereUniqueInput | ClienteSimuladoWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UsuarioUpdateOneRequiredWithoutCampanasCreadasNestedInput = {
    create?: XOR<UsuarioCreateWithoutCampanasCreadasInput, UsuarioUncheckedCreateWithoutCampanasCreadasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCampanasCreadasInput
    upsert?: UsuarioUpsertWithoutCampanasCreadasInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCampanasCreadasInput, UsuarioUpdateWithoutCampanasCreadasInput>, UsuarioUncheckedUpdateWithoutCampanasCreadasInput>
  }

  export type ClienteSimuladoUpdateManyWithoutCampanaNestedInput = {
    create?: XOR<ClienteSimuladoCreateWithoutCampanaInput, ClienteSimuladoUncheckedCreateWithoutCampanaInput> | ClienteSimuladoCreateWithoutCampanaInput[] | ClienteSimuladoUncheckedCreateWithoutCampanaInput[]
    connectOrCreate?: ClienteSimuladoCreateOrConnectWithoutCampanaInput | ClienteSimuladoCreateOrConnectWithoutCampanaInput[]
    upsert?: ClienteSimuladoUpsertWithWhereUniqueWithoutCampanaInput | ClienteSimuladoUpsertWithWhereUniqueWithoutCampanaInput[]
    createMany?: ClienteSimuladoCreateManyCampanaInputEnvelope
    set?: ClienteSimuladoWhereUniqueInput | ClienteSimuladoWhereUniqueInput[]
    disconnect?: ClienteSimuladoWhereUniqueInput | ClienteSimuladoWhereUniqueInput[]
    delete?: ClienteSimuladoWhereUniqueInput | ClienteSimuladoWhereUniqueInput[]
    connect?: ClienteSimuladoWhereUniqueInput | ClienteSimuladoWhereUniqueInput[]
    update?: ClienteSimuladoUpdateWithWhereUniqueWithoutCampanaInput | ClienteSimuladoUpdateWithWhereUniqueWithoutCampanaInput[]
    updateMany?: ClienteSimuladoUpdateManyWithWhereWithoutCampanaInput | ClienteSimuladoUpdateManyWithWhereWithoutCampanaInput[]
    deleteMany?: ClienteSimuladoScalarWhereInput | ClienteSimuladoScalarWhereInput[]
  }

  export type ClienteSimuladoUncheckedUpdateManyWithoutCampanaNestedInput = {
    create?: XOR<ClienteSimuladoCreateWithoutCampanaInput, ClienteSimuladoUncheckedCreateWithoutCampanaInput> | ClienteSimuladoCreateWithoutCampanaInput[] | ClienteSimuladoUncheckedCreateWithoutCampanaInput[]
    connectOrCreate?: ClienteSimuladoCreateOrConnectWithoutCampanaInput | ClienteSimuladoCreateOrConnectWithoutCampanaInput[]
    upsert?: ClienteSimuladoUpsertWithWhereUniqueWithoutCampanaInput | ClienteSimuladoUpsertWithWhereUniqueWithoutCampanaInput[]
    createMany?: ClienteSimuladoCreateManyCampanaInputEnvelope
    set?: ClienteSimuladoWhereUniqueInput | ClienteSimuladoWhereUniqueInput[]
    disconnect?: ClienteSimuladoWhereUniqueInput | ClienteSimuladoWhereUniqueInput[]
    delete?: ClienteSimuladoWhereUniqueInput | ClienteSimuladoWhereUniqueInput[]
    connect?: ClienteSimuladoWhereUniqueInput | ClienteSimuladoWhereUniqueInput[]
    update?: ClienteSimuladoUpdateWithWhereUniqueWithoutCampanaInput | ClienteSimuladoUpdateWithWhereUniqueWithoutCampanaInput[]
    updateMany?: ClienteSimuladoUpdateManyWithWhereWithoutCampanaInput | ClienteSimuladoUpdateManyWithWhereWithoutCampanaInput[]
    deleteMany?: ClienteSimuladoScalarWhereInput | ClienteSimuladoScalarWhereInput[]
  }

  export type CampanaCreateNestedOneWithoutClientesInput = {
    create?: XOR<CampanaCreateWithoutClientesInput, CampanaUncheckedCreateWithoutClientesInput>
    connectOrCreate?: CampanaCreateOrConnectWithoutClientesInput
    connect?: CampanaWhereUniqueInput
  }

  export type SimulacionCreateNestedManyWithoutClienteInput = {
    create?: XOR<SimulacionCreateWithoutClienteInput, SimulacionUncheckedCreateWithoutClienteInput> | SimulacionCreateWithoutClienteInput[] | SimulacionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: SimulacionCreateOrConnectWithoutClienteInput | SimulacionCreateOrConnectWithoutClienteInput[]
    createMany?: SimulacionCreateManyClienteInputEnvelope
    connect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
  }

  export type SimulacionUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<SimulacionCreateWithoutClienteInput, SimulacionUncheckedCreateWithoutClienteInput> | SimulacionCreateWithoutClienteInput[] | SimulacionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: SimulacionCreateOrConnectWithoutClienteInput | SimulacionCreateOrConnectWithoutClienteInput[]
    createMany?: SimulacionCreateManyClienteInputEnvelope
    connect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CampanaUpdateOneWithoutClientesNestedInput = {
    create?: XOR<CampanaCreateWithoutClientesInput, CampanaUncheckedCreateWithoutClientesInput>
    connectOrCreate?: CampanaCreateOrConnectWithoutClientesInput
    upsert?: CampanaUpsertWithoutClientesInput
    disconnect?: CampanaWhereInput | boolean
    delete?: CampanaWhereInput | boolean
    connect?: CampanaWhereUniqueInput
    update?: XOR<XOR<CampanaUpdateToOneWithWhereWithoutClientesInput, CampanaUpdateWithoutClientesInput>, CampanaUncheckedUpdateWithoutClientesInput>
  }

  export type SimulacionUpdateManyWithoutClienteNestedInput = {
    create?: XOR<SimulacionCreateWithoutClienteInput, SimulacionUncheckedCreateWithoutClienteInput> | SimulacionCreateWithoutClienteInput[] | SimulacionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: SimulacionCreateOrConnectWithoutClienteInput | SimulacionCreateOrConnectWithoutClienteInput[]
    upsert?: SimulacionUpsertWithWhereUniqueWithoutClienteInput | SimulacionUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: SimulacionCreateManyClienteInputEnvelope
    set?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    disconnect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    delete?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    connect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    update?: SimulacionUpdateWithWhereUniqueWithoutClienteInput | SimulacionUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: SimulacionUpdateManyWithWhereWithoutClienteInput | SimulacionUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: SimulacionScalarWhereInput | SimulacionScalarWhereInput[]
  }

  export type SimulacionUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<SimulacionCreateWithoutClienteInput, SimulacionUncheckedCreateWithoutClienteInput> | SimulacionCreateWithoutClienteInput[] | SimulacionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: SimulacionCreateOrConnectWithoutClienteInput | SimulacionCreateOrConnectWithoutClienteInput[]
    upsert?: SimulacionUpsertWithWhereUniqueWithoutClienteInput | SimulacionUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: SimulacionCreateManyClienteInputEnvelope
    set?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    disconnect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    delete?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    connect?: SimulacionWhereUniqueInput | SimulacionWhereUniqueInput[]
    update?: SimulacionUpdateWithWhereUniqueWithoutClienteInput | SimulacionUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: SimulacionUpdateManyWithWhereWithoutClienteInput | SimulacionUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: SimulacionScalarWhereInput | SimulacionScalarWhereInput[]
  }

  export type ClienteSimuladoCreateNestedOneWithoutSimulacionesInput = {
    create?: XOR<ClienteSimuladoCreateWithoutSimulacionesInput, ClienteSimuladoUncheckedCreateWithoutSimulacionesInput>
    connectOrCreate?: ClienteSimuladoCreateOrConnectWithoutSimulacionesInput
    connect?: ClienteSimuladoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutSimulacionesInput = {
    create?: XOR<UsuarioCreateWithoutSimulacionesInput, UsuarioUncheckedCreateWithoutSimulacionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSimulacionesInput
    connect?: UsuarioWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ClienteSimuladoUpdateOneRequiredWithoutSimulacionesNestedInput = {
    create?: XOR<ClienteSimuladoCreateWithoutSimulacionesInput, ClienteSimuladoUncheckedCreateWithoutSimulacionesInput>
    connectOrCreate?: ClienteSimuladoCreateOrConnectWithoutSimulacionesInput
    upsert?: ClienteSimuladoUpsertWithoutSimulacionesInput
    connect?: ClienteSimuladoWhereUniqueInput
    update?: XOR<XOR<ClienteSimuladoUpdateToOneWithWhereWithoutSimulacionesInput, ClienteSimuladoUpdateWithoutSimulacionesInput>, ClienteSimuladoUncheckedUpdateWithoutSimulacionesInput>
  }

  export type UsuarioUpdateOneRequiredWithoutSimulacionesNestedInput = {
    create?: XOR<UsuarioCreateWithoutSimulacionesInput, UsuarioUncheckedCreateWithoutSimulacionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSimulacionesInput
    upsert?: UsuarioUpsertWithoutSimulacionesInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutSimulacionesInput, UsuarioUpdateWithoutSimulacionesInput>, UsuarioUncheckedUpdateWithoutSimulacionesInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type SimulacionCreateWithoutUsuarioInput = {
    sessionId: string
    estado?: string
    fechaInicio?: Date | string
    fechaFin?: Date | string | null
    duracion?: number | null
    transcripcion: JsonNullValueInput | InputJsonValue
    calificacion?: number | null
    feedback?: string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    cliente: ClienteSimuladoCreateNestedOneWithoutSimulacionesInput
  }

  export type SimulacionUncheckedCreateWithoutUsuarioInput = {
    id?: number
    clienteId: number
    sessionId: string
    estado?: string
    fechaInicio?: Date | string
    fechaFin?: Date | string | null
    duracion?: number | null
    transcripcion: JsonNullValueInput | InputJsonValue
    calificacion?: number | null
    feedback?: string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type SimulacionCreateOrConnectWithoutUsuarioInput = {
    where: SimulacionWhereUniqueInput
    create: XOR<SimulacionCreateWithoutUsuarioInput, SimulacionUncheckedCreateWithoutUsuarioInput>
  }

  export type SimulacionCreateManyUsuarioInputEnvelope = {
    data: SimulacionCreateManyUsuarioInput | SimulacionCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type CampanaCreateWithoutCreadorInput = {
    nombre: string
    descripcion?: string | null
    estado?: string
    fechaInicio: Date | string
    fechaFin?: Date | string | null
    campos: JsonNullValueInput | InputJsonValue
    prompt: string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    clientes?: ClienteSimuladoCreateNestedManyWithoutCampanaInput
  }

  export type CampanaUncheckedCreateWithoutCreadorInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    estado?: string
    fechaInicio: Date | string
    fechaFin?: Date | string | null
    campos: JsonNullValueInput | InputJsonValue
    prompt: string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    clientes?: ClienteSimuladoUncheckedCreateNestedManyWithoutCampanaInput
  }

  export type CampanaCreateOrConnectWithoutCreadorInput = {
    where: CampanaWhereUniqueInput
    create: XOR<CampanaCreateWithoutCreadorInput, CampanaUncheckedCreateWithoutCreadorInput>
  }

  export type CampanaCreateManyCreadorInputEnvelope = {
    data: CampanaCreateManyCreadorInput | CampanaCreateManyCreadorInput[]
    skipDuplicates?: boolean
  }

  export type SimulacionUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: SimulacionWhereUniqueInput
    update: XOR<SimulacionUpdateWithoutUsuarioInput, SimulacionUncheckedUpdateWithoutUsuarioInput>
    create: XOR<SimulacionCreateWithoutUsuarioInput, SimulacionUncheckedCreateWithoutUsuarioInput>
  }

  export type SimulacionUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: SimulacionWhereUniqueInput
    data: XOR<SimulacionUpdateWithoutUsuarioInput, SimulacionUncheckedUpdateWithoutUsuarioInput>
  }

  export type SimulacionUpdateManyWithWhereWithoutUsuarioInput = {
    where: SimulacionScalarWhereInput
    data: XOR<SimulacionUpdateManyMutationInput, SimulacionUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type SimulacionScalarWhereInput = {
    AND?: SimulacionScalarWhereInput | SimulacionScalarWhereInput[]
    OR?: SimulacionScalarWhereInput[]
    NOT?: SimulacionScalarWhereInput | SimulacionScalarWhereInput[]
    id?: IntFilter<"Simulacion"> | number
    clienteId?: IntFilter<"Simulacion"> | number
    usuarioId?: IntFilter<"Simulacion"> | number
    sessionId?: StringFilter<"Simulacion"> | string
    estado?: StringFilter<"Simulacion"> | string
    fechaInicio?: DateTimeFilter<"Simulacion"> | Date | string
    fechaFin?: DateTimeNullableFilter<"Simulacion"> | Date | string | null
    duracion?: IntNullableFilter<"Simulacion"> | number | null
    transcripcion?: JsonFilter<"Simulacion">
    calificacion?: FloatNullableFilter<"Simulacion"> | number | null
    feedback?: StringNullableFilter<"Simulacion"> | string | null
    evaluacion?: JsonNullableFilter<"Simulacion">
    tipificacion?: JsonNullableFilter<"Simulacion">
    fechaCreacion?: DateTimeFilter<"Simulacion"> | Date | string
    fechaActualizacion?: DateTimeFilter<"Simulacion"> | Date | string
  }

  export type CampanaUpsertWithWhereUniqueWithoutCreadorInput = {
    where: CampanaWhereUniqueInput
    update: XOR<CampanaUpdateWithoutCreadorInput, CampanaUncheckedUpdateWithoutCreadorInput>
    create: XOR<CampanaCreateWithoutCreadorInput, CampanaUncheckedCreateWithoutCreadorInput>
  }

  export type CampanaUpdateWithWhereUniqueWithoutCreadorInput = {
    where: CampanaWhereUniqueInput
    data: XOR<CampanaUpdateWithoutCreadorInput, CampanaUncheckedUpdateWithoutCreadorInput>
  }

  export type CampanaUpdateManyWithWhereWithoutCreadorInput = {
    where: CampanaScalarWhereInput
    data: XOR<CampanaUpdateManyMutationInput, CampanaUncheckedUpdateManyWithoutCreadorInput>
  }

  export type CampanaScalarWhereInput = {
    AND?: CampanaScalarWhereInput | CampanaScalarWhereInput[]
    OR?: CampanaScalarWhereInput[]
    NOT?: CampanaScalarWhereInput | CampanaScalarWhereInput[]
    id?: IntFilter<"Campana"> | number
    nombre?: StringFilter<"Campana"> | string
    descripcion?: StringNullableFilter<"Campana"> | string | null
    estado?: StringFilter<"Campana"> | string
    fechaInicio?: DateTimeFilter<"Campana"> | Date | string
    fechaFin?: DateTimeNullableFilter<"Campana"> | Date | string | null
    campos?: JsonFilter<"Campana">
    prompt?: StringFilter<"Campana"> | string
    criteriosEvaluacion?: JsonNullableFilter<"Campana">
    creadorId?: IntFilter<"Campana"> | number
    fechaCreacion?: DateTimeFilter<"Campana"> | Date | string
    fechaActualizacion?: DateTimeFilter<"Campana"> | Date | string
  }

  export type UsuarioCreateWithoutCampanasCreadasInput = {
    email: string
    password?: string | null
    nombre: string
    apellido?: string | null
    rol: string
    activo?: boolean
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
    simulaciones?: SimulacionCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutCampanasCreadasInput = {
    id?: number
    email: string
    password?: string | null
    nombre: string
    apellido?: string | null
    rol: string
    activo?: boolean
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
    simulaciones?: SimulacionUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutCampanasCreadasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCampanasCreadasInput, UsuarioUncheckedCreateWithoutCampanasCreadasInput>
  }

  export type ClienteSimuladoCreateWithoutCampanaInput = {
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: string
    asignadoA?: number | null
    fechaAsignacion?: Date | string | null
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
    simulaciones?: SimulacionCreateNestedManyWithoutClienteInput
  }

  export type ClienteSimuladoUncheckedCreateWithoutCampanaInput = {
    id?: number
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: string
    asignadoA?: number | null
    fechaAsignacion?: Date | string | null
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
    simulaciones?: SimulacionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteSimuladoCreateOrConnectWithoutCampanaInput = {
    where: ClienteSimuladoWhereUniqueInput
    create: XOR<ClienteSimuladoCreateWithoutCampanaInput, ClienteSimuladoUncheckedCreateWithoutCampanaInput>
  }

  export type ClienteSimuladoCreateManyCampanaInputEnvelope = {
    data: ClienteSimuladoCreateManyCampanaInput | ClienteSimuladoCreateManyCampanaInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutCampanasCreadasInput = {
    update: XOR<UsuarioUpdateWithoutCampanasCreadasInput, UsuarioUncheckedUpdateWithoutCampanasCreadasInput>
    create: XOR<UsuarioCreateWithoutCampanasCreadasInput, UsuarioUncheckedCreateWithoutCampanasCreadasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCampanasCreadasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCampanasCreadasInput, UsuarioUncheckedUpdateWithoutCampanasCreadasInput>
  }

  export type UsuarioUpdateWithoutCampanasCreadasInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    simulaciones?: SimulacionUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCampanasCreadasInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    simulaciones?: SimulacionUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ClienteSimuladoUpsertWithWhereUniqueWithoutCampanaInput = {
    where: ClienteSimuladoWhereUniqueInput
    update: XOR<ClienteSimuladoUpdateWithoutCampanaInput, ClienteSimuladoUncheckedUpdateWithoutCampanaInput>
    create: XOR<ClienteSimuladoCreateWithoutCampanaInput, ClienteSimuladoUncheckedCreateWithoutCampanaInput>
  }

  export type ClienteSimuladoUpdateWithWhereUniqueWithoutCampanaInput = {
    where: ClienteSimuladoWhereUniqueInput
    data: XOR<ClienteSimuladoUpdateWithoutCampanaInput, ClienteSimuladoUncheckedUpdateWithoutCampanaInput>
  }

  export type ClienteSimuladoUpdateManyWithWhereWithoutCampanaInput = {
    where: ClienteSimuladoScalarWhereInput
    data: XOR<ClienteSimuladoUpdateManyMutationInput, ClienteSimuladoUncheckedUpdateManyWithoutCampanaInput>
  }

  export type ClienteSimuladoScalarWhereInput = {
    AND?: ClienteSimuladoScalarWhereInput | ClienteSimuladoScalarWhereInput[]
    OR?: ClienteSimuladoScalarWhereInput[]
    NOT?: ClienteSimuladoScalarWhereInput | ClienteSimuladoScalarWhereInput[]
    id?: IntFilter<"ClienteSimulado"> | number
    campanaId?: IntNullableFilter<"ClienteSimulado"> | number | null
    datos?: JsonNullableFilter<"ClienteSimulado">
    estado?: StringFilter<"ClienteSimulado"> | string
    asignadoA?: IntNullableFilter<"ClienteSimulado"> | number | null
    fechaAsignacion?: DateTimeNullableFilter<"ClienteSimulado"> | Date | string | null
    fechaCreacion?: DateTimeNullableFilter<"ClienteSimulado"> | Date | string | null
    fechaActualizacion?: DateTimeNullableFilter<"ClienteSimulado"> | Date | string | null
  }

  export type CampanaCreateWithoutClientesInput = {
    nombre: string
    descripcion?: string | null
    estado?: string
    fechaInicio: Date | string
    fechaFin?: Date | string | null
    campos: JsonNullValueInput | InputJsonValue
    prompt: string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    creador: UsuarioCreateNestedOneWithoutCampanasCreadasInput
  }

  export type CampanaUncheckedCreateWithoutClientesInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    estado?: string
    fechaInicio: Date | string
    fechaFin?: Date | string | null
    campos: JsonNullValueInput | InputJsonValue
    prompt: string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    creadorId: number
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type CampanaCreateOrConnectWithoutClientesInput = {
    where: CampanaWhereUniqueInput
    create: XOR<CampanaCreateWithoutClientesInput, CampanaUncheckedCreateWithoutClientesInput>
  }

  export type SimulacionCreateWithoutClienteInput = {
    sessionId: string
    estado?: string
    fechaInicio?: Date | string
    fechaFin?: Date | string | null
    duracion?: number | null
    transcripcion: JsonNullValueInput | InputJsonValue
    calificacion?: number | null
    feedback?: string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
    usuario: UsuarioCreateNestedOneWithoutSimulacionesInput
  }

  export type SimulacionUncheckedCreateWithoutClienteInput = {
    id?: number
    usuarioId: number
    sessionId: string
    estado?: string
    fechaInicio?: Date | string
    fechaFin?: Date | string | null
    duracion?: number | null
    transcripcion: JsonNullValueInput | InputJsonValue
    calificacion?: number | null
    feedback?: string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type SimulacionCreateOrConnectWithoutClienteInput = {
    where: SimulacionWhereUniqueInput
    create: XOR<SimulacionCreateWithoutClienteInput, SimulacionUncheckedCreateWithoutClienteInput>
  }

  export type SimulacionCreateManyClienteInputEnvelope = {
    data: SimulacionCreateManyClienteInput | SimulacionCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type CampanaUpsertWithoutClientesInput = {
    update: XOR<CampanaUpdateWithoutClientesInput, CampanaUncheckedUpdateWithoutClientesInput>
    create: XOR<CampanaCreateWithoutClientesInput, CampanaUncheckedCreateWithoutClientesInput>
    where?: CampanaWhereInput
  }

  export type CampanaUpdateToOneWithWhereWithoutClientesInput = {
    where?: CampanaWhereInput
    data: XOR<CampanaUpdateWithoutClientesInput, CampanaUncheckedUpdateWithoutClientesInput>
  }

  export type CampanaUpdateWithoutClientesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campos?: JsonNullValueInput | InputJsonValue
    prompt?: StringFieldUpdateOperationsInput | string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    creador?: UsuarioUpdateOneRequiredWithoutCampanasCreadasNestedInput
  }

  export type CampanaUncheckedUpdateWithoutClientesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campos?: JsonNullValueInput | InputJsonValue
    prompt?: StringFieldUpdateOperationsInput | string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    creadorId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SimulacionUpsertWithWhereUniqueWithoutClienteInput = {
    where: SimulacionWhereUniqueInput
    update: XOR<SimulacionUpdateWithoutClienteInput, SimulacionUncheckedUpdateWithoutClienteInput>
    create: XOR<SimulacionCreateWithoutClienteInput, SimulacionUncheckedCreateWithoutClienteInput>
  }

  export type SimulacionUpdateWithWhereUniqueWithoutClienteInput = {
    where: SimulacionWhereUniqueInput
    data: XOR<SimulacionUpdateWithoutClienteInput, SimulacionUncheckedUpdateWithoutClienteInput>
  }

  export type SimulacionUpdateManyWithWhereWithoutClienteInput = {
    where: SimulacionScalarWhereInput
    data: XOR<SimulacionUpdateManyMutationInput, SimulacionUncheckedUpdateManyWithoutClienteInput>
  }

  export type ClienteSimuladoCreateWithoutSimulacionesInput = {
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: string
    asignadoA?: number | null
    fechaAsignacion?: Date | string | null
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
    campana?: CampanaCreateNestedOneWithoutClientesInput
  }

  export type ClienteSimuladoUncheckedCreateWithoutSimulacionesInput = {
    id?: number
    campanaId?: number | null
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: string
    asignadoA?: number | null
    fechaAsignacion?: Date | string | null
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
  }

  export type ClienteSimuladoCreateOrConnectWithoutSimulacionesInput = {
    where: ClienteSimuladoWhereUniqueInput
    create: XOR<ClienteSimuladoCreateWithoutSimulacionesInput, ClienteSimuladoUncheckedCreateWithoutSimulacionesInput>
  }

  export type UsuarioCreateWithoutSimulacionesInput = {
    email: string
    password?: string | null
    nombre: string
    apellido?: string | null
    rol: string
    activo?: boolean
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
    campanasCreadas?: CampanaCreateNestedManyWithoutCreadorInput
  }

  export type UsuarioUncheckedCreateWithoutSimulacionesInput = {
    id?: number
    email: string
    password?: string | null
    nombre: string
    apellido?: string | null
    rol: string
    activo?: boolean
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
    campanasCreadas?: CampanaUncheckedCreateNestedManyWithoutCreadorInput
  }

  export type UsuarioCreateOrConnectWithoutSimulacionesInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutSimulacionesInput, UsuarioUncheckedCreateWithoutSimulacionesInput>
  }

  export type ClienteSimuladoUpsertWithoutSimulacionesInput = {
    update: XOR<ClienteSimuladoUpdateWithoutSimulacionesInput, ClienteSimuladoUncheckedUpdateWithoutSimulacionesInput>
    create: XOR<ClienteSimuladoCreateWithoutSimulacionesInput, ClienteSimuladoUncheckedCreateWithoutSimulacionesInput>
    where?: ClienteSimuladoWhereInput
  }

  export type ClienteSimuladoUpdateToOneWithWhereWithoutSimulacionesInput = {
    where?: ClienteSimuladoWhereInput
    data: XOR<ClienteSimuladoUpdateWithoutSimulacionesInput, ClienteSimuladoUncheckedUpdateWithoutSimulacionesInput>
  }

  export type ClienteSimuladoUpdateWithoutSimulacionesInput = {
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: StringFieldUpdateOperationsInput | string
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAsignacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campana?: CampanaUpdateOneWithoutClientesNestedInput
  }

  export type ClienteSimuladoUncheckedUpdateWithoutSimulacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    campanaId?: NullableIntFieldUpdateOperationsInput | number | null
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: StringFieldUpdateOperationsInput | string
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAsignacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUpsertWithoutSimulacionesInput = {
    update: XOR<UsuarioUpdateWithoutSimulacionesInput, UsuarioUncheckedUpdateWithoutSimulacionesInput>
    create: XOR<UsuarioCreateWithoutSimulacionesInput, UsuarioUncheckedCreateWithoutSimulacionesInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutSimulacionesInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutSimulacionesInput, UsuarioUncheckedUpdateWithoutSimulacionesInput>
  }

  export type UsuarioUpdateWithoutSimulacionesInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campanasCreadas?: CampanaUpdateManyWithoutCreadorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutSimulacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campanasCreadas?: CampanaUncheckedUpdateManyWithoutCreadorNestedInput
  }

  export type SimulacionCreateManyUsuarioInput = {
    id?: number
    clienteId: number
    sessionId: string
    estado?: string
    fechaInicio?: Date | string
    fechaFin?: Date | string | null
    duracion?: number | null
    transcripcion: JsonNullValueInput | InputJsonValue
    calificacion?: number | null
    feedback?: string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type CampanaCreateManyCreadorInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    estado?: string
    fechaInicio: Date | string
    fechaFin?: Date | string | null
    campos: JsonNullValueInput | InputJsonValue
    prompt: string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type SimulacionUpdateWithoutUsuarioInput = {
    sessionId?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    transcripcion?: JsonNullValueInput | InputJsonValue
    calificacion?: NullableFloatFieldUpdateOperationsInput | number | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteSimuladoUpdateOneRequiredWithoutSimulacionesNestedInput
  }

  export type SimulacionUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    sessionId?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    transcripcion?: JsonNullValueInput | InputJsonValue
    calificacion?: NullableFloatFieldUpdateOperationsInput | number | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SimulacionUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    sessionId?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    transcripcion?: JsonNullValueInput | InputJsonValue
    calificacion?: NullableFloatFieldUpdateOperationsInput | number | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampanaUpdateWithoutCreadorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campos?: JsonNullValueInput | InputJsonValue
    prompt?: StringFieldUpdateOperationsInput | string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    clientes?: ClienteSimuladoUpdateManyWithoutCampanaNestedInput
  }

  export type CampanaUncheckedUpdateWithoutCreadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campos?: JsonNullValueInput | InputJsonValue
    prompt?: StringFieldUpdateOperationsInput | string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    clientes?: ClienteSimuladoUncheckedUpdateManyWithoutCampanaNestedInput
  }

  export type CampanaUncheckedUpdateManyWithoutCreadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    campos?: JsonNullValueInput | InputJsonValue
    prompt?: StringFieldUpdateOperationsInput | string
    criteriosEvaluacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClienteSimuladoCreateManyCampanaInput = {
    id?: number
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: string
    asignadoA?: number | null
    fechaAsignacion?: Date | string | null
    fechaCreacion?: Date | string | null
    fechaActualizacion?: Date | string | null
  }

  export type ClienteSimuladoUpdateWithoutCampanaInput = {
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: StringFieldUpdateOperationsInput | string
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAsignacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    simulaciones?: SimulacionUpdateManyWithoutClienteNestedInput
  }

  export type ClienteSimuladoUncheckedUpdateWithoutCampanaInput = {
    id?: IntFieldUpdateOperationsInput | number
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: StringFieldUpdateOperationsInput | string
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAsignacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    simulaciones?: SimulacionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteSimuladoUncheckedUpdateManyWithoutCampanaInput = {
    id?: IntFieldUpdateOperationsInput | number
    datos?: NullableJsonNullValueInput | InputJsonValue
    estado?: StringFieldUpdateOperationsInput | string
    asignadoA?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAsignacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaActualizacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SimulacionCreateManyClienteInput = {
    id?: number
    usuarioId: number
    sessionId: string
    estado?: string
    fechaInicio?: Date | string
    fechaFin?: Date | string | null
    duracion?: number | null
    transcripcion: JsonNullValueInput | InputJsonValue
    calificacion?: number | null
    feedback?: string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: Date | string
    fechaActualizacion?: Date | string
  }

  export type SimulacionUpdateWithoutClienteInput = {
    sessionId?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    transcripcion?: JsonNullValueInput | InputJsonValue
    calificacion?: NullableFloatFieldUpdateOperationsInput | number | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutSimulacionesNestedInput
  }

  export type SimulacionUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sessionId?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    transcripcion?: JsonNullValueInput | InputJsonValue
    calificacion?: NullableFloatFieldUpdateOperationsInput | number | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SimulacionUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sessionId?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    transcripcion?: JsonNullValueInput | InputJsonValue
    calificacion?: NullableFloatFieldUpdateOperationsInput | number | null
    feedback?: NullableStringFieldUpdateOperationsInput | string | null
    evaluacion?: NullableJsonNullValueInput | InputJsonValue
    tipificacion?: NullableJsonNullValueInput | InputJsonValue
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaActualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsuarioCountOutputTypeDefaultArgs instead
     */
    export type UsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CampanaCountOutputTypeDefaultArgs instead
     */
    export type CampanaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CampanaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClienteSimuladoCountOutputTypeDefaultArgs instead
     */
    export type ClienteSimuladoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClienteSimuladoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioDefaultArgs instead
     */
    export type UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CampanaDefaultArgs instead
     */
    export type CampanaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CampanaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClienteSimuladoDefaultArgs instead
     */
    export type ClienteSimuladoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClienteSimuladoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SimulacionDefaultArgs instead
     */
    export type SimulacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SimulacionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ConfiguracionSistemaDefaultArgs instead
     */
    export type ConfiguracionSistemaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ConfiguracionSistemaDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}