# docker-compose.yml
version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: nova_trainer_db
    environment:
      POSTGRES_USER: nova_user
      POSTGRES_PASSWORD: nova_password
      POSTGRES_DB: nova_trainer
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nova_network

  # Backend Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: nova_trainer_backend
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql://nova_user:nova_password@postgres:5432/nova_trainer
      NODE_ENV: development
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - nova_network
    command: npm run dev

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: nova_trainer_frontend
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - nova_network
    command: npm run dev

volumes:
  postgres_data:

networks:
  nova_network:
    driver: bridge